new Vue({
    el: '#content',
    data: {
        // 主页面相关数据
        tableData: [],
        dialog_reportName: '',
        diaMsg: '',
        searchInfo: "",
        //主表格分页数据
        currentIndex: 0,
        maxSpace: 5,
        totalPage: 0,
        pageMaxNum: 10,
        // 文件
        uploadingFile: {},
        fileUrl: '',
        // 弹窗信息
        //  NewMonthlyReportReq {
        //    
        //     }
        dialogData: {
            reportName: "",
            reportAbstract: "",
            reportDate: '',
            bottomImagePath: "",
            topImagePath: '',
            reportUrl: '',
            groupImagePaths: {},
        },
        type: '',
        // 基金策略
        strategyArr: [
            {
                strategyName: '养老策略',
                typeof: 'forAgedStrategy',

                groupArr: [{
                    fileName: '',
                    groupName: 'htfforAged2030',
                    fileUrl: '',
                    name: '添富养老2030'
                }, {
                    fileName: '',
                    groupName: 'htfforAged2040',
                    fileUrl: '',
                    name: '添富养老2040'
                }, {
                    fileName: '',
                    fileUrl: '',
                    groupName: 'htfforAged2050',

                    name: '添富养老2050'
                }]
            }, {
                strategyName: '稳健策略',
                typeof: 'steadyStrategy',
                groupArr: [{
                    fileName: '',
                    fileUrl: '',
                    groupName: 'steadyNumberOne',

                    name: '稳稳小确幸1号'
                }, {
                    fileName: '',
                    fileUrl: '',
                    name: '稳稳小确幸2号',
                    groupName: 'steadyNumberrTwo',

                }, {
                    fileName: '',
                    groupName: 'steadyStrictSelection',
                    fileUrl: '',
                    name: '稳健严选'

                }]
            }, {
                strategyName: '权益策略',
                typeof: 'equityStrategy',

                groupArr: [{
                    fileName: '',
                    fileUrl: '',
                    groupName: 'voteWithMe',

                    name: '跟我投'
                }, {
                    fileName: '',
                    groupName: 'equityStrictSelection',
                    fileUrl: '',
                    name: '权益严选'
                }]
            },
            {
                strategyName: '活钱策略',
                typeof: 'quickStrategy',
                groupArr: [{
                    name: '理财佳',
                    groupName: 'goodFinancia',
                    fileUrl: '',
                    fileName: '',
                }]
            },


            {
                strategyName: '教育策略',
                typeof: 'educationStrategy',

                groupArr: [{
                    fileName: '',
                    fileUrl: '',
                    groupName: 'htfEducation',

                    name: '添富教育'
                }]
            }


        ],
        search: { reportName: '', reportDate: '' },
        bottomImagePath: "",
        bottomImageNm: "",
        topImagePath: "",
        topImageNm: "",

    },
    mounted: function () {

        // this.showDialog('', 'add', false);

        var dialogs = ['info', 'add', 'relation', 'del', 'uploadFile'];
        var _this = this;
        dialogs.forEach(function (id) {
            $('#' + id).on('shown.bs.modal', function () {
                var $this = $(this);
                var dialog = $this.find('.modal-dialog');
                var top = ($(window).height() - dialog.height()) / 2;
                dialog.css({
                    marginTop: top
                });
            });
        });
        // var arr = ['fundGroupsList', 'fundRelations'];

        this.getTableData(0);
    },
    computed: {
        //主表格假分页
        middleData: function () {
            var middleData = [];
            var filterData = [];
            var pageMaxNum = parseInt(this.pageMaxNum);
            var _this = this;
            console.log(this.tableData)
            this.tableData.forEach(function (jsonObj) {
                var valueArr = [];
                for (var prop in jsonObj) {
                    valueArr.push(jsonObj[prop]);
                }
                for (var i = 0, len = valueArr.length; i < len; i++) {
                    if (valueArr[i]) {
                        if (valueArr[i].toString().indexOf(_this.condition) != -1) {
                            filterData.push(jsonObj);
                            break;
                        }
                    }
                }
            });
            if (filterData.length <= pageMaxNum) {
                middleData.push(filterData);
                return middleData;
            } else {
                var i = 0;
                while ((i + 1) * pageMaxNum < filterData.length) {
                    middleData.push(filterData.slice(i * pageMaxNum, (i + 1) * pageMaxNum));
                    i++;
                }
                middleData.push(filterData.slice(i * pageMaxNum, filterData.length));
                return middleData;
            }
        },
        viewData: function () {
            var currentIndex = parseInt(this.currentIndex);
            return this.middleData[currentIndex];
        },
        pageList: function () {
            var arr = [];
            if (this.middleData.length <= 2 * this.maxSpace) {
                for (var i = 0; i < this.middleData.length; i++) {
                    arr.push(i + 1);
                }
                return arr;
            }
            if (this.currentIndex > this.maxSpace && this.middleData.length - this.currentIndex > this.maxSpace) {
                for (var i = this.currentIndex - this.maxSpace; i < this.currentIndex + this.maxSpace; i++) {
                    arr.push(i + 1);
                }
            } else if (this.currentIndex <= this.maxSpace && this.middleData.length - this.currentIndex > this.maxSpace) {
                for (var i = 0; i < this.currentIndex + (2 * this.maxSpace - this.currentIndex); i++) {
                    arr.push(i + 1);
                }
            } else if (this.currentIndex > this.maxSpace && this.middleData.length - this.currentIndex <= this.maxSpace) {
                var space = this.middleData.length - this.currentIndex;
                for (var i = this.currentIndex - (2 * this.maxSpace - space); i < this.middleData.length; i++) {
                    arr.push(i + 1);
                }
            } else {
                for (var i = 0; i < this.middleData.length; i++) {
                    arr.push(i + 1);
                }
            }
            return arr;
        }
    },
    watch: {
        // 假分页
        pageMaxNum: {
            handler: function (val, oldval) {
                this.currentIndex = 0;
            }
        },
        condition: {
            handler: function (val, oldval) {
                this.currentIndex = 0;
            }
        }
    },
    methods: {
        forFileInfo(index1, index2, file, fileUrl) {
            this.strategyArr.forEach((item, index) => {
                if (index == index1) {
                    item.groupArr.forEach((it, i) => {
                        if (i == index2) {
                            it.fileName = file.name
                            it.fileUrl = fileUrl
                        }
                    })
                }
            })
        },
        //文件上传
        uploadsFileImg(e, ...arg) {
            console.log(arg.length)

            var _this = this;
            if (!/\.(gif|jpg|jpeg|png|bmp|GIF|JPG|PNG)$/.test(e.target.value)) {
                alert('图片类型必须是.gif,jpeg,jpg,png,bmp中的一种')
                return false
            }
            var file = e.target.files[0];
            console.log("fileName===", file.name);
            var formdata = new FormData(); //创建formdata对象
            formdata.append('file', file);
            if (arg.length == 4) {
                formdata.append('typeName', arg[2]);
                formdata.append('groupName', arg[3]);
            } else if (arg[1] == 'top') {

            } else if (arg[1] == 'bottom') {

            }


            $.post({
                url: '/investmentMgmt/investmentInformationDisclosure/monthlyReport/uploadPostPicFile.ajax',
                type: 'post',
                dataType: 'json',
                data: formdata,
                processData: false,
                contentType: false,
                success: function (result) {
                    if (result.error === 0) {
                        const fileUrl = result.data.imageUrl;
                        _this.forFileInfo(index1, index2, file, fileUrl)
                        console.log(result.data.imageUrl);
                        _this.showDialog('add', 'info', true, result.msg);
                    } else {
                        _this.showDialog('add', 'info', true, result.msg);
                    }
                }
            })
        },
        preview() { },

        // 查询表格报告数据
        getTableData: function (currentIndex) {
            var _this = this;
            var params = this.search;
            this.currentIndex = 0;
            $.post({
                url: '/investmentMgmt/investmentInformationDisclosure/monthlyReport/getTableData.ajax',
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        // _this.currentIndex = 0;
                        _this.tableData = result.data.tableData
                    } else {
                        // _this.tableData = [];
                        _this.currentIndex = 0;
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            });
        },
        // 展示录入弹窗
        showAdd: function () {
            this.type = 'add';
            this.showDialog('', 'add', false);
        },

        saveParam: function () {
            _this = this;
            console.log(this.dialogData)
            let params = this.dialogData
            params.reportDate = this.transformTime(this.dialogData.reportDate, 'YYYY-MM')
            console.log(params)
            let url
            if (this.type === 'add') {
                params.reportDate = Date.now()
                url = "/investmentMgmt/investmentInformationDisclosure/monthlyReport/addParam.ajax"
            } else {
                url = "/investmentMgmt/investmentInformationDisclosure/monthlyReport/upData.ajax"

            }
            $.post({
                url,
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        _this.getTableData();
                        _this.showDialog('add', 'info', false, result.msg);
                    } else {
                        _this.showDialog('add', 'info', true, result.msg);
                    }
                }
            });
        },
        // 文件上传
        uploadFile: function () {
            $('#uploadFileInput').change(function () {
                $('#uploadInput').val($(this).val());
            });
            $('#uploadInput').val('');
            $('#uploadFileInput').val('');
            this.showDialog('', 'uploadFile');
        },
        fileUpload: function () {
            var excelData = $('#uploadFileInput').get(0).files[0];
            if (!excelData) {
                this.showDialog('uploadFile', 'info', true, '未选择文件');
                return;
            }
            var fileType = excelData.name.split('.')[excelData.name.split('.').length - 1];
            if (fileType !== 'pdf') {
                this.showDialog('uploadFile', 'info', true, '上传文件格式错误,请上传.pdf文件');
                return;
            }
            var _this = this;
            this.showDialog('uploadFile', '');
            this.loadingShow = true;
            var file = document.getElementById('uploadFileInput');
            var formdata = new FormData();
            formdata.append('file', file.files[0]);
            $.post({
                url: '/investmentMgmt/investmentInformationDisclosure/monthlyRepot/upload.ajax',
                cache: false,
                data: formdata,
                processData: false,
                contentType: false,
            }).done(function (result) {
                _this.loadingShow = false;
                _this.getTableData();
                _this.showDialog('', 'info', false, result.msg);
            }).fail(function (err) {
                _this.showDialog('', 'info', false, '上传失败');
            });
        },
        // 下载

        // 删除
        showDelete: function (item) {
            var _this = this;
            let params = {
                id: item.id
            }
            // this.showDialog('', 'del');
            $.post({
                url: '/investmentMgmt/investmentInformationDisclosure/monthlyReport/del.ajax',
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        _this.getTableData();
                        _this.showDialog('', 'info', false, result.msg);
                    } else {
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            });
        },

        showUpdate: function (item) {
            this.dialogData = item
            this.showDialog('', 'add')
            this.type = 'update';
        },

        showDialog: function (dia1, dia2, callback, msg) {
            if (msg) {
                this.diaMsg = msg;
            } else {
                msg = '输入条件错误';
            }
            if (!dia1) {
                $('#' + dia2).modal('show');
            } else if (!dia2) {
                $('#' + dia1).modal('hide');
            } else if (!callback) {
                $('#' + dia1).on("hidden.bs.modal", function () {
                    $('#' + dia2).modal('show');
                    $('#' + dia1).off().on("hidden", "hidden.bs.modal");
                });
                $('#' + dia1).modal('hide');
            } else {
                $('#' + dia1).on("hidden.bs.modal", function () {
                    $('#' + dia2).on("hidden.bs.modal", function () {
                        $('#' + dia1).modal("show");
                        $('#' + dia2).off().on("hidden", "hidden.bs.modal");
                    });
                    $('#' + dia2).modal("show");
                    $('#' + dia1).off().on("hidden", "hidden.bs.modal");
                });
                $('#' + dia1).modal('hide');
            }
        },
        transformTime(time, transform) {
            console.log('time', time)

            var date = new Date(Number(time));


            let year = date.getFullYear();
            let month = date.getMonth() + 1;
            let day = date.getDate();
            let h = date.getHours()
            let i = date.getMinutes()
            let s = date.getSeconds();
            month = month < 10 ? '0' + month : month;
            day = day < 10 ? '0' + day : day;
            if (h < 10) {
                h = '0' + h;
            }
            if (i < 10) {
                i = '0' + i;
            }
            if (s < 10) {
                s = '0' + s;
            }
            if (transform == 'YYYYMM') {
            return  year + month

            } else {
               return  year + '-' + month + '-' + day + " " + h + ':' + i + ':' + s
            }
            
        },
        //主表格分页方法
        prev: function () {
            this.currentIndex <= 0 ? 0 : this.currentIndex--;
        },
        next: function () {
            this.currentIndex >= this.middleData.length - 1 ? this.middleData.length - 1 : this.currentIndex++;
        },
        changeIndex: function (index) {
            this.currentIndex = index - 1;
        },
        toFirst: function () {
            this.currentIndex = 0;
        },
        toLast: function () {
            this.currentIndex = this.middleData.length - 1;
        }
    },
    components: {
        'date-picker': VueBootstrapDatetimePicker
    }
});