const request = require('./../../../local_data/requestWrapper');
const original_request = require('request');
const apiUrlList = require('../apiConfig').investmentInformationDisclosure;
const request_obs = require('../../../local_data/request_obs');
const formidable = require('formidable');
const apiFileUrl = require('../apiConfig')
const filePathExternal = apiFileUrl.filePathExternal + '/investmentStrategy';
const filePathExternal_url = apiFileUrl.filePafilePathExternalthUrl + '/investmentStrategy';
const fs = require('fs');
const path = require('path');
const investTableName = 'uop_log_invest';
module.exports = function (app) {

    // 获取列表数据
    app.post('/investmentMgmt/investmentInformationDisclosure/monthlyReport/getTableData.ajax', (req, res, next) => {
        let params = {};

        let monthlyReportDataUrl = path.join(__dirname, 'monthlyReport.json')
        params.reportId = req.body
        fs.readFile(monthlyReportDataUrl, 'utf-8', (error, fileData) => {
            console.log('error=====', error)
            if (error) {
                return res.send({
                    error: 1,
                    msg: '查询失败'
                });
            } else {
                console.log('fileData', fileData)
                fileData = JSON.parse(fileData)
                return res.send({
                    error: 0,
                    msg: '查询成功',
                    data: fileData.data
                });
            }
        })
    });
    // 删除
    app.post('/investmentMgmt/investmentInformationDisclosure/monthlyReport/del.ajax', (req, res, next) => {
        let params = req.body
        let monthlyReportDataUrl = path.join(__dirname, 'monthlyReport.json')
        var writeData
        fs.readFile(monthlyReportDataUrl, 'utf-8', (error, fileData) => {
            console.log('error=====', error)
            if (error) {
                return res.send({
                    error: 1,
                    msg: '读取失败'
                });
            } else {
                console.log('fileData', fileData)
                fileData = JSON.parse(fileData)
                readData = fileData.data

                let deleteId = readData.tableData.find(function (item) {
                    return item.id === params.id
                })
                if (deleteId) {
                    readData.tableData.splice(deleteId, 1)
                    writeData = JSON.stringify({
                        data: readData
                    })
                    console.log('writeData', writeData)
                    fs.writeFile(monthlyReportDataUrl, writeData, (error, data) => {
                        if (error) {
                            return res.send({
                                error: 1,
                                msg: '写入失败'
                            });
                        } else {
                            return res.send({
                                error: 0,
                                msg: '操作成功',
                            });
                        }
                    })
                } else {
                    return res.send({
                        error: 9999,
                        msg: '操作失败',
                    });
                }
            }
        })

    });

    //图片上传
    app.post('/investmentMgmt/investmentInformationDisclosure/monthlyReport/uploadPostPicFile.ajax', (req, res, next) => {
        console.log('1filePathExternal_url', filePathExternal_url)
        console.log('2filePathExternal', filePathExternal)
        try {
            !fs.existsSync(apiConfig.filePathExternal) && fs.mkdirSync(apiConfig.filePathExternal);
            !fs.existsSync(filePathExternal) && fs.mkdirSync(filePathExternal);
            const postPicFilePath = filePathExternal + '/monthlyReport';
            !fs.existsSync(postPicFilePath) && fs.mkdirSync(postPicFilePath);
            let form = new formidable.IncomingForm();
            form.uploadDir = postPicFilePath;
            form.keepExtensions = true;
            form.parse(req, (err, fields, files) => {
                console.log('数据接收完毕:', fields);
                console.log('文件接收完毕:', files);
                let originFilePath = path.resolve(files.file.path);
                fs.createReadStream(originFilePath).pipe(fs.createWriteStream(`${postPicFilePath}/${files.file.name}`));
                fs.unlinkSync(originFilePath);
                res.send({
                    error: 0,
                    msg: '上传成功',
                    data: {
                        filePath: `${filePathExternal_url}/monthlyReport/${files.file.name}`
                    }
                });
            });
        } catch (error) {
            res.send({
                error: 0,
                msg: '上传失败',
                data: null
            });
        }
    });
    // 编辑信息
    app.post('/investmentMgmt/investmentInformationDisclosure/monthlyReport/upData.ajax', (req, res, next) => {
        let params = req.body
        let monthlyReportDataUrl = path.join(__dirname, 'monthlyReport.json')
        var writeData
        fs.readFile(monthlyReportDataUrl, 'utf-8', (error, fileData) => {
            console.log('error=====', error)
            if (error) {
                return res.send({
                    error: 1,
                    msg: '读取失败'
                });
            } else {
                fileData = JSON.parse(fileData)
                readData = fileData.data

                let mReport = readData.tableData.find(function (item) {
                    return item.id === params.id
                })
                for(var key in params) {
                    mReport[key]=params[key]
                }
                writeData = JSON.stringify({
                    data: readData
                })
                console.log('writeData', writeData)
                fs.writeFile(monthlyReportDataUrl, writeData, (error, data) => {
                    if (error) {
                        return res.send({
                            error: 1,
                            msg: '写入失败'
                        });
                    } else {
                        return res.send({
                            error: 0,
                            msg: '操作成功',
                        });
                    }
                })
            }
        })

    });

    //新增
    app.post('/investmentMgmt/investmentInformationDisclosure/monthlyReport/add.ajax', (req, res, next) => {
        let params = req.body
        let monthlyReportDataUrl = path.join(__dirname, 'monthlyReport.json')
        var writeData
        fs.readFile(monthlyReportDataUrl, 'utf-8', (error, fileData) => {
            console.log('error=====', error)
            if (error) {
                return res.send({
                    error: 1,
                    msg: '读取失败'
                });
            } else {
                console.log('fileData', fileData)
                fileData = JSON.parse(fileData)
                readData = fileData.data
                console.log('readData', readData.tableData.length)
                let i = readData.tableData.length - 1
                params.mReportNo = Number(readData.tableData[i].mReportNo) + 1
                params.id = params.mReportCreateTime + parseInt(Math.random() * 99)
                readData.tableData.push(params)
                console.log('readData', readData)
                writeData = JSON.stringify({
                    data: readData
                })
                console.log('writeData', writeData)

                fs.writeFile(monthlyReportDataUrl, writeData, (error, data) => {
                    if (error) {
                        return res.send({
                            error: 1,
                            msg: '写入失败'
                        });
                    } else {
                        return res.send({
                            error: 0,
                            msg: '操作成功',
                        });
                    }
                })
            }
        })

    });
};