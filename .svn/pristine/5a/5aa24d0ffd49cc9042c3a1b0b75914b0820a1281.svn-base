var vm = new Vue({
	el: '#content',
	data: {
		// 主页面相关数据
		experienceCouponId: '', //体验券ID
		tableData: [],
		diaMsg: '',
		//主表格分页数据
		currentIndex: 0,
		maxSpace: 5,
		totalPage: 0,
		pageMaxNum: 10,
		// 新增
		// eventForRuleIds:[], //触发规则列表
		// expContainedParamList:[],
		// triggerConditionExpList: [],
		eventForNodeIds:[],
		dia_experienceCouponId :'',
        dia_rewardType:'', //奖励类型
		dia_apkind: '',
		dia_msgConfigId:'',
		dia_rewardDetail:'',
		dia_rewardDetailNumber:'',
		dia_rewardType:'',
		dia_subapkind:'',
		dia_logicFlag:true,
		selectForNodeIds:[{"pkey":'totalRevenue',"pname":"体验总收益"}],
		experienceCouponNameList:[],
		msgRuleList: [],
		awardList:[],
		activeList:[],
	},
	mounted: function() {
		var dialogs = ['info', 'add', 'update', 'delete'];
		var _this = this;
		dialogs.forEach(function(id) {
			$('#' + id).on('shown.bs.modal', function() {
				var $this = $(this);
				var dialog = $this.find('.modal-dialog');
				var top = ($(window).height() - dialog.height()) / 2;
				dialog.css({
					marginTop: top
				});
			});
		});
		this.getTableData(0);
		this.getList();

	},
	computed: {
        dia_triggerConditionExp : function () {
            // console.log('123123213');
            var str = '';
            var operator = this.logicFlag ? '&&' : '||';
            this.eventForNodeIds.forEach(function (item) {
                if (item.key1 && item.key2 && item.key3) {
                    str += operator + item.key1 + item.key2 + item.key3;
                }
                // item.isShow=false;
            })
            str = str.slice(2);
            return str;
        },
        dia_expContainedParam : function () {
            // console.log('123123213');
            var str = '';
            this.eventForNodeIds.forEach(function (item) {
                if (item.key1 && item.key2 && item.key3) {
                    str += item.key1 + ',';
                }
            })
            str = str.substring(0, str.length - 1);
            return str;
        },

		pageList: function() {
			var arr = [];
			if (this.totalPage <= 2 * this.maxSpace) {
				for (var i = 0; i < this.totalPage; i++) {
					arr.push(i + 1);
				}
				return arr;
			}
			if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
				for (var i = this.currentIndex - this.maxSpace; i < this.currentIndex + this.maxSpace; i++) {
					arr.push(i + 1);
				}
			} else if (this.currentIndex <= this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
				for (var i = 0; i < this.currentIndex + (2 * this.maxSpace - this.currentIndex); i++) {
					arr.push(i + 1);
				}
			} else if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex <= this.maxSpace) {
				var space = this.totalPage - this.currentIndex;
				for (var i = this.currentIndex - (2 * this.maxSpace - space); i < this.totalPage; i++) {
					arr.push(i + 1);
				}
			} else {
				for (var i = 0; i < this.totalPage; i++) {
					arr.push(i + 1);
				}
			}
			return arr;
		},
	},
	watch: {
		pageMaxNum: function() {
			this.getTableData(0);
		}
	},
	methods: {
		getList: function() {
			var params = {};
			var _this = this;
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/queryExperienceCouponList.ajax',
				data: params,
				success: function(result) {
					if (result.error === 0) {
						_this.experienceCouponNameList = result.data.rows;
					} else {
						_this.experienceCouponNameList = [];
						_this.showDialog('', 'info', false, result.msg);
					}
				}
			});
			//消息中心list
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/msgRuleList.ajax',
				data: {
					ruleSource: 'reward'
				},
				success: function (result) {
					if (result.error === 0) {
						// console.log(result);
						_this.msgRuleList = result.data;
					} else {
						_this.msgRuleList = [];
					}
				}
			});
			//奖励包list
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/awardList.ajax',
                data: params,
                success: function (result) {
                    if (result.error === 0) {
						_this.awardList = result.data.rows;
                    } else {
						_this.awardList = [];
                    }
                }
            });
			//活动list
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/activeList.ajax',
				success: function (result) {
					if (result.error === 0) {
						_this.activeList=result.data
					}
					else {
						_this.activeList = [];
						_this.showDialog('', 'info', false, result.msg);
					}
				}
			});
		},

		getTableData: function(currentIndex) {
			var params = {};
			params.experienceCouponId = this.experienceCouponId;
			params.pageNo = currentIndex + 1;
			params.pageSize = this.pageMaxNum;
			var _this = this;
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/query.ajax',
				data: params,
				success: function(result) {
					if (result.error === 0) {
						_this.tableData = result.data.rows.filter(function (item) {
                            return item.experienceCouponId.indexOf(params.experienceCouponId) > -1;
                        });

						_this.currentIndex = result.data.pageNum - 1;
						_this.totalPage = result.data.pages;
					} else {
						_this.tableData = [];
						_this.currentIndex = 0;
						_this.totalPage = 0;
						_this.showDialog('', 'info', false, result.msg);
					}
				}
			});
		},
		showAddDialog: function() {
			this.eventForNodeIds = [];
			this.dia_experienceCouponId = '';
			this.dia_rewardType = '';
			this.dia_apkind = '';
			this.dia_msgConfigId = '';
			this.dia_rewardDetail = '';
			this.dia_rewardDetailNumber = '';
			this.dia_rewardType = '';
			this.dia_subapkind = '';
			this.showDialog('', 'add');
		},
		showUpdate: function(item) {
			var _this = this;
			var conditionJson = JSON.parse(item.conditionJson);
			this.dia_experienceCouponId = item.experienceCouponId;
			this.dia_rewardType = conditionJson.rewardType;
			this.dia_apkind = item.apkind;
			this.dia_msgConfigId = conditionJson.msgConfigId;
			this.dia_rewardType = conditionJson.rewardType;
			this.dia_subapkind = item.subapkind;
			this.dia_rewardDetail = conditionJson.subapkind == '01'?conditionJson.rewardDetail.split('|')[0]:conditionJson.rewardDetail;
			this.dia_rewardDetailNumber = conditionJson.subapkind == '01'?conditionJson.rewardDetail.split('|')[1]:'';			
			var dia_logicFlag = true;

			// var dia_triggerConditionExp = conditionJson.triggerConditionExp;
			var arr = null;
			if (conditionJson.triggerConditionExp  && (conditionJson.triggerConditionExp.indexOf('||') != -1)) {
				arr = conditionJson.triggerConditionExp  ? conditionJson.triggerConditionExp .split('||') : [];
				dia_logicFlag=false;
			} else {
				arr = conditionJson.triggerConditionExp  ? conditionJson.triggerConditionExp.split('&&') : [];
				dia_logicFlag=true;
			}
			console.log(arr);
			var eventForNodeIds = [];
			arr.forEach(function (item) {
				// console.log(item,'item');
				if (item.indexOf('==') != -1) {
					console.log(item.split('==')[0], ',0--');
					console.log(item.split('==')[1], ',1--');
					eventForNodeIds.push({
						key1: item.split('==')[0],
						key2: '==',
						key3: item.split('==')[1],
						pkey: item.split('==')[0],
					})
				} else if (item.indexOf('>') != -1 && item.indexOf('>=') == -1) {
					eventForNodeIds.push({
						key1: item.split('>')[0],
						key2: '>',
						key3: item.split('>')[1],
						pkey: item.split('>')[0],
					})
				} else if (item.indexOf('<') != -1 && item.indexOf('<=') == -1) {
					eventForNodeIds.push({
						key1: item.split('<')[0],
						key2: '<',
						key3: item.split('<')[1],
						pkey: item.split('<')[0],
					})
				} else if (item.indexOf('>=') != -1) {
					eventForNodeIds.push({
						key1: item.split('>=')[0],
						key2: '>=',
						key3: item.split('>=')[1],
						pkey: item.split('>=')[0],
					})
				} else if (item.indexOf('<=') != -1) {
					eventForNodeIds.push({
						key1: item.split('<=')[0],
						key2: '<=',
						key3: item.split('<=')[1],
						pkey: item.split('<=')[0],

					})
				} else if (item.indexOf('!=') != -1) {
					eventForNodeIds.push({
						key1: item.split('!=')[0],
						key2: '!=',
						key3: item.split('!=')[1],
						pkey: item.split('!=')[0],
					})
				}
			})
			this.eventForNodeIds = eventForNodeIds;
			this.showDialog('', 'update');
		},
		addSave: function() {
			if (!this.dia_experienceCouponId) {
				this.showDialog('add', 'info', true, '未填写体验金券名称！');
				return false;
			}
			if (!this.dia_rewardType) {
				this.showDialog('add', 'info', true, '未填写体验金券奖励类型！');
				return false;
			}
			if (!this.dia_apkind) {
				this.showDialog('add', 'info', true, '未填写业务编码！');
				return false;
			}
			if (!this.dia_rewardDetail&&this.dia_rewardType== '00') {
				this.showDialog('add', 'info', true, '未填写发送奖励包名称！');
				return false;
			}
			if (!this.dia_rewardDetail&&this.dia_rewardType== '01') {
				this.showDialog('add', 'info', true, '未填写参加活动名称！');
				return false;
			}			
			if (!this.dia_rewardDetailNumber&&this.dia_rewardType== '01') {
				this.showDialog('add', 'info', true, '未填写参加活动次数！');
				return false;
			}
			var params = {};
			params.apkind  = this.dia_apkind;
			params.expContainedParam = this.dia_expContainedParam;
			params.experienceCouponId = this.dia_experienceCouponId;
            params.modifyTime = new Date().getTime();
			params.msgConfigId = this.dia_msgConfigId;
			params.rewardDetail = this.dia_rewardType == '01'? this.dia_rewardDetail+'|'+this.dia_rewardDetailNumber:this.dia_rewardDetail;
			params.rewardType = this.dia_rewardType;
			params.subapkind = this.subapkind;
			params.triggerConditionExp = this.dia_triggerConditionExp;

			var _this = this;
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/saveParam.ajax',
				data: params,
				success: function(result) {
					if (result.error === 0) {
						_this.getTableData(0);
                        _this.showDialog('add', 'info', false, result.msg);
					} else {
						_this.showDialog('add', 'info', true, result.msg);
					}
				}
			});
		},
		update: function() {
			if (!this.dia_experienceCouponId) {
				this.showDialog('update', 'info', true, '未填写体验金券名称！');
				return false;
			}
			if (!this.dia_rewardType) {
				this.showDialog('update', 'info', true, '未填写体验金券奖励类型！');
				return false;
			}
			if (!this.dia_apkind) {
				this.showDialog('update', 'info', true, '未填写业务编码！');
				return false;
			}
			if (!this.dia_rewardDetail&&this.dia_rewardType== '00') {
				this.showDialog('update', 'info', true, '未填写发送奖励包名称！');
				return false;
			}
			if (!this.dia_rewardDetail&&this.dia_rewardType== '01') {
				this.showDialog('update', 'info', true, '未填写参加活动名称！');
				return false;
			}			
			if (!this.dia_rewardDetailNumber&&this.dia_rewardType== '01') {
				this.showDialog('update', 'info', true, '未填写参加活动次数！');
				return false;
			}
			var params = {};
			params.apkind  = this.dia_apkind;
			params.expContainedParam = this.dia_expContainedParam;
			params.experienceCouponId = this.dia_experienceCouponId;
            params.modifyTime = new Date().getTime();
			params.msgConfigId = this.dia_msgConfigId;
			params.rewardDetail = this.dia_rewardType == '01'? this.dia_rewardDetail+'|'+this.dia_rewardDetailNumber:this.dia_rewardDetail;
			params.rewardType = this.dia_rewardType;
			params.subapkind = this.subapkind;
			params.triggerConditionExp = this.dia_triggerConditionExp;

			var _this = this;
			$.post({
				url: '/awardMgmt/experienceGold/rewardSetting/update.ajax',
				data: params,
				success: function(result) {
					if (result.error === 0) {
						_this.getTableData(0);
						_this.showDialog('update', 'info', false, result.msg);
					} else {
						_this.showDialog('update', 'info', true, result.msg);
					}
				}
			});
		},

        removeChild:function(nodeindex){
            this.eventForNodeIds.splice(nodeindex,1);
        },
		// removeRule:function(ruleindex){
        //     this.eventForRuleIds.splice(ruleindex,1);
        // },
        // 与或开关切换
        andOrSwitch: function () {
            this.logicFlag = !this.logicFlag;
        },
        eventShow: function () {
            this.eventForNodeIds.push({
                key1: '',
                key2: '',
                key3: '',
                pkey: '',
            })
        },
		// ruleShow: function () {
        //     this.eventForRuleIds.push({
        //         rewardDetail: '',
		// 		rewardDetailNumber: '',
        //         msgConfigId: '',
		// 		apkind:'',
		// 		subapkind:'',
		// 		eventForNodeIds:[],
		// 		logicFlag:true
        //     })
        // },
		showDialog: function(dia1, dia2, callback, msg) {
			if (msg) {
				this.diaMsg = msg;
			} else {
				msg = '输入条件错误';
			}
			if (!dia1) {
				$('#' + dia2).modal('show');
			} else if (!dia2) {
				$('#' + dia1).modal('hide');
			} else if (!callback) {
				$('#' + dia1).on("hidden.bs.modal", function() {
					$('#' + dia2).modal('show');
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
			} else {
				$('#' + dia1).on("hidden.bs.modal", function() {
					$('#' + dia2).on("hidden.bs.modal", function() {
						$('#' + dia1).modal("show");
						$('#' + dia2).off().on("hidden", "hidden.bs.modal");
					});
					$('#' + dia2).modal("show");
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
			}
		},
		//主表格分页方法
		prev: function() {
			if (this.currentIndex <= 0) {
				return;
			}
			this.getTableData(this.currentIndex - 1);
		},
		next: function() {
			if (this.currentIndex >= this.totalPage - 1) {
				return;
			}
			this.getTableData(this.currentIndex + 1);
		},
		changeIndex: function(index) {
			this.getTableData(index - 1);
		},
		toFirst: function() {
			this.getTableData(0);
		},
		toLast: function() {
			this.getTableData(this.totalPage - 1);
		}
	}
});
