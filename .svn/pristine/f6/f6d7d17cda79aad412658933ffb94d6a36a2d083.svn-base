new Vue({
    el: '#content',
    data: {
        //主页面相关数据
        //查询
        tagConfigId: '',
        tagName: '',
        tableData: [],
        childContentTpList:[],
        childContentIdsList:[],
        //源数据
        meteData:[],

        userId: '',
        diaMsg: '',
        previewPath: '',
        loadingStatus: '数据获取中...',
        updateId: '',
        deleteId: '',
        isUpdate: false,
        loadingShow: false,
        //dialog新增修改数据
        diatagName: '',
        diachildContentTp: '',
        diachildContentIds:[],
        diaremark:'',
        diasubTagName:'',
        diaisCheck:'0',

        channelId:"",
        elementCollection:'',
        viewList: [],
        channelMenu: [],
        elementCollectionData:[],
        elementShow:{
            diatagName: true,
            diachildContentTp: true,
            diachildContentIds:true,
            diaremark:true,
            // deadLinein:true,
            diaisCheck:true,
            diasubTagName:true
        },

        //第一次
        onceClick:false,
        //查询
        searchChildContentId:'',

        //主表格分页数据
        currentIndex: 0,
        maxSpace: 5,
        totalPage: 0,
        pageMaxNum: 10
    },
    computed: {
        pageList: function () {
            var arr = [];
            if (this.totalPage <= 2 * this.maxSpace) {
                for (var i = 0; i < this.totalPage; i++) {
                    arr.push(i + 1);
                }
                return arr;
            }
            if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
                for (var i = this.currentIndex - this.maxSpace; i < this.currentIndex + this.maxSpace; i++) {
                    arr.push(i + 1);
                }
            } else if (this.currentIndex <= this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
                for (var i = 0; i < this.currentIndex + (2 * this.maxSpace - this.currentIndex); i++) {
                    arr.push(i + 1);
                }
            } else if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex <= this.maxSpace) {
                var space = this.totalPage - this.currentIndex;
                for (var i = this.currentIndex - (2 * this.maxSpace - space); i < this.totalPage; i++) {
                    arr.push(i + 1);
                }
            } else {
                for (var i = 0; i < this.totalPage; i++) {
                    arr.push(i + 1);
                }
            }
            return arr;
        }
    },
    watch: {
        pageMaxNum: function () {
            this.getTableData(0);
        },
        diachildContentTp:function () {
            var _this = this;
            this.childContentIdsList = [];
            this.meteData = [];
            this.searchChildContentId='';
            //
            if(this.onceClick){
                this.diachildContentIds=[];
            }
            _this.queryChildIds()
        },
        searchChildContentId:{
            handler: function (val, oldVal) {
                this.childContentIdsList=this.meteData;
                var brr = [];
                if(this.childContentIdsList.length>0&&val!=''){
                    this.childContentIdsList.forEach(function (item) {
                        if(item.name.indexOf(val)!=-1){
                            brr.push(item);
                        }
                    });
                    if(brr.length>0){
                        this.childContentIdsList=brr;
                    }else {
                        this.childContentIdsList=[];
                    }
                }else{
                    this.childContentIdsList=this.meteData;
                }
            },
        },
        elementCollection:{
            handler:function (val,oldval) {
                var _this=this;
                if(val){
                    this.getViewData(val);
                }else{
                    for(var ele in this.elementShow ){
                        this.elementShow[ele]=true;
                    }
                }
            }
        }
    },
    mounted: function () {
        var _this = this;
        var dialogs = ['info', 'rejectCheck','delete1'];
        dialogs.forEach(function (id) {
            $('#' + id).on('shown.bs.modal', function () {
                var $this = $(this);
                var dialog = $this.find('.modal-dialog');
                var top = ($(window).height() - dialog.height()) / 2;
                dialog.css({
                    marginTop: top
                });
            });
        });
        $('.date-timepicker').datetimepicker({
            format: 'YYYY-MM-DD HH:mm:ss',//use this option to display seconds
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-chevron-up',
                down: 'fa fa-chevron-down',
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-arrows ',
                clear: 'fa fa-trash',
                close: 'fa fa-times'
            }
        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
        //querychildContentTp
        $.post({
            url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/querychildContentTp.ajax',
            data:{pageNo:1,pageSize:999},
            success: function (result) {
                if (result.error === 0) {
                    _this.childContentTpList=result.data.rows;
                } else {
                    _this.showDialog('', 'info', false, result.msg);
                }
            }
        });
        //获取渠道列表
        $.post({
            url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/channelMenu.ajax',
            data: {pageNo: 1,pageSize:9999},
            success: function (result) {
                if (result.error === 0) {
                    if(result.data.rows.length>0){
                        _this.channelMenu=result.data.rows;
                    }else{
                        _this.showDialog('', 'info', false,'渠道列表暂无数据');
                    }
                } else {
                    _this.showDialog('', 'info', false, result.msg);
                }
            }
        });
        // 获取视图列表
        this.getViewData();
        this.getTableData(0);
    },
    methods: {
        // 获取视图列表
        getViewData: function (val,once) {
            var _this = this;
            var params = {};
            var str = '';
            params.pageNo = 1;
            params.pageSize = 9999;
            val && (params.temId = val);
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/viewList.ajax',
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        if (result.data.rows.length > 0) {
                            !val && (_this.viewList = result.data.rows);
                            if (result.data.rows[0].elementCollection&&val) {
                                val && (_this.elementCollectionData = result.data.rows[0].elementCollection.toString().split(','));
                            } else {
                                for (var item in _this.elementShow) {
                                    _this.elementShow[item] = true;
                                }
                                return;
                            }
                            for (var ele in _this.elementShow) {
                                if(_this.elementCollectionData.map(function (item) {
                                        return 'dia' + item;
                                    }).indexOf(ele) > -1){
                                    _this.elementShow[ele] = true;
                                }
                                else {
                                    _this.elementShow[ele] = false;
                                }
                            }

                        } else {
                            if(once){
                                _this.showDialog('add', 'info', true, '视图列表暂无数据');
                            }else{
                                _this.showDialog('', 'info', false, '视图列表暂无数据');
                            }
                        }
                    } else {
                        if(once){
                            _this.showDialog('add', 'info', true, result.msg);
                        }else{
                            _this.showDialog('', 'info', false, result.msg);
                        }
                    }
                }
            });
        },
        //list
        getTableData: function (currentIndex) {
            var params = {};
            var _this = this;
            params.pageNo = currentIndex + 1;
            params.pageSize = this.pageMaxNum;
            params.tagConfigId = this.tagConfigId;
            params.tagName = this.tagName;
            // console.log(params);
            _this.loadingStatus = '数据获取中...';
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/queryInfo.ajax',
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        if (result.data.rows && result.data.rows.length > 0) {
                            _this.userId = result.data.userId;
                            _this.tableData = result.data.rows;
                            _this.currentIndex = result.data.pageNum - 1;
                            _this.totalPage = result.data.pages;
                        } else {
                            _this.tableData = [];
                            _this.currentIndex = 0;
                            _this.totalPage = 0;
                            _this.loadingStatus = '没有数据';
                        }

                    } else {
                        _this.tableData = [];
                        _this.currentIndex = 0;
                        _this.totalPage = 0;
                        _this.showDialog('', 'info', false, result.msg);
                        _this.loadingStatus = '没有数据';
                    }
                }
            });
        },
        //查询childIds
        queryChildIds:function () {
            var _this=this;
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/querychildContentIds.ajax',
                data: {childContentTp:_this.diachildContentTp},
                success: function (result) {
                    if (result.error === 0) {
                        _this.childContentIdsList=[];
                        var tmp=result.data;
                        for (var k in tmp) {
                            var item = tmp[k];
                            if (_this.diachildContentTp == "fund") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].fundconfigId,name:item[i].fundconfigId + ':' + item[i].fundTitle})
                                }

                            } else if (_this.diachildContentTp  == "advice") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].advconfigId,name:item[i].advconfigId + ':' + item[i].adviceTitle})
                                }

                            } else if (_this.diachildContentTp  == "funcbtn") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].funcBtnId,name:item[i].funcBtnId + ':' + item[i].funcBtnName})
                                }

                            } else if (_this.diachildContentTp  == "adImg") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].adImgId,name:item[i].remark == null ? '' : item[i].remark})
                                }
                            } else if (_this.diachildContentTp  == "notice") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].noticeId,name:item[i].noticeId + ':' + item[i].noticeValue});
                                }
                            } else if (_this.diachildContentTp  == "webanner") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].weBannerId,name:item[i].weBannerId + ':' + item[i].remark});
                                }
                            } else if (_this.diachildContentTp  == "weprod") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].weProdId,name: item[i].sceneName});
                                }
                            } else if (_this.diachildContentTp  == "activity") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].id,name: item[i].title});
                                }
                            } else if (_this.diachildContentTp  == "custombtn") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].btnId,name: item[i].btnName});
                                }
                            } else if (_this.diachildContentTp  == "loadpage") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].loadPageConfigId,name: item[i].remark});
                                }
                            } else if (_this.diachildContentTp  == "fundgroup") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].fundGroupConfigId,name: item[i].fundGroupTitle});
                                }
                            } else if (_this.diachildContentTp  == "manager") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].managerConfigId,name: item[i].managerName});
                                }
                            } else if (_this.diachildContentTp  == "wx_fund") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].fundconfigId,name: item[i].fundTitle});
                                }

                            } else if (_this.diachildContentTp  == "wx_funcbtn") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].btnId,name: item[i].btnName});
                                }
                            } else if (_this.diachildContentTp  == "wx_adImg") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].adImgId,name: item[i].adImgId + ':' + item[i].remark});
                                }
                            } else if (_this.diachildContentTp  == "product") {
                                for(var i=0;i<item.length;i++){
                                    if(item[i].remark){
                                        _this.childContentIdsList.push({value:item[i].prdConfigId,name: item[i].prdTitle+'--'+item[i].remark});
                                    }else{
                                        _this.childContentIdsList.push({value:item[i].prdConfigId,name: item[i].prdTitle});
                                    }

                                }
                            } else if (_this.diachildContentTp  == "index") {
                                for(var i=0;i<item.length;i++){
                                    _this.childContentIdsList.push({value:item[i].indexConfigId,name:(item[i].indexTypeName == null ? '' : item[i].indexTypeName) + ':' + (item[i].indexName == null ? '' : item[i].indexName)});
                                }

                            }

                        }
                            _this.meteData= _this.childContentIdsList;

                    } else {
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            });
        },

        //新增活动配置
        setAddData: function (obj) {
            this.diatagName = obj.tagName ? obj.tagName : '';
            this.diachildContentTp = obj.childContentTp ? obj.childContentTp : '';
            this.diachildContentIds = obj.childContentIds ? obj.childContentIds.split(',') : [];
            this.diaremark = obj.remark ? obj.remark : '';
            this.diaisCheck = obj.isCheck ? obj.isCheck : '';
            this.diasubTagName = obj.subTagName ? obj.subTagName : '';
            // $("#deadLinein").val(obj.deadLine ? this.formatTime(obj.deadLine) : '');
            this.channelId = obj.channelId ? obj.channelId : '';
            this.elementCollection = obj.previewTemid ? obj.previewTemid : '';
        },
        showAdd: function () {
            this.elementCollection = '';
            this.childContentIdsList = [];
            this.isUpdate = false;
            this.updateId = '';
            this.setAddData({isCheck:'0'});
            this.showDialog('', 'add');
        },
        showUpdate: function (item) {
            if(item.previewTemid){
                this.getViewData(item.previewTemid,true);
            }else{
                for(var ele in this.elementShow ){
                    this.elementShow[ele]=true;
                }
            }
            this.onceClick = false;
            this.isUpdate = true;
            this.updateId = item.tagConfigId;
            this.setAddData(item);
            this.showDialog('', 'add');
            this.queryChildIds();
        },
        add: function () {
            if(this.channelId==''){
                this.showDialog('add', 'info', true, '渠道必须选择！');
                return false;
            }
            if(this.elementCollection==''){
                this.showDialog('add', 'info', true, '模板必须选择！');
                return false;
            }
            var _this = this;
            if(this.diatagName==''){
                _this.showDialog('add', 'info', true, '标签名称必须填写！');
                return;
            }
            var params = {};
            params.tagName = this.diatagName;
            params.childContentTp = this.diachildContentTp;
            params.childContentIds = this.diachildContentIds.length>0?this.diachildContentIds.join(','):'';
            params.remark = this.diaremark;
            // params.deadLinein = $("#deadLinein").val();
            params.isCheck = this.diaisCheck;
            params.subTagName = this.diasubTagName;
            params.channelId = this.channelId;
            params.previewTemid = this.elementCollection;

            this.isUpdate && (params.tagConfigId = this.updateId);
            this.isUpdate && (params.modifyBy = this.userId);
            !this.isUpdate && (params.createBy = this.userId);
            var url = '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/';
            url += this.isUpdate ? 'update.ajax' : 'add.ajax';
            $.post({
                url: url,
                data: params,
                success: function (result) {
                    if (result.error === 0) {
                        _this.getTableData(0);
                    }
                    _this.showDialog('add', 'info', false, result.msg);
                }
            });

        },
        //启用或禁用
        enableOrDisable: function (item) {
            var _this = this;
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/enable.ajax',
                data: {tagConfigId: item.tagConfigId},
                success: function (result) {
                    if (result.error === 0) {
                        _this.showDialog('', 'info', false, '操作成功');
                        _this.getTableData(_this.currentIndex);
                    } else {
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            })
        },
        //删除
        deleteParams: function (item) {
            this.deleteId= item.indexConfigId;
            this.showDialog('', 'delete1', false);
        },
        deleteConfirm: function () {
            var _this = this;
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/delete.ajax',
                data: {indexConfigId: this.deleteId},
                success: function (result) {
                    if (result.error === 0) {
                        _this.showDialog('', 'info', false, '操作成功');
                        _this.getTableData(_this.currentIndex);
                    } else {
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            })
        },
        fresh:function () {
            var _this=this;
            $.post({
                url: '/recommendSystem/recommendSystemTemplateConfig/labelTemplateConfig/fresh.ajax',
                success: function (result) {
                    if (result.error === 0) {
                        _this.showDialog('', 'info', false, '操作成功');
                    } else {
                        _this.showDialog('', 'info', false, result.msg);
                    }
                }
            })
        },
        //主表格分页方法
        check: function (item) {
            item.check = !item.check;
        },
        allCheck: function () {
            var _this = this;
            var flag = this.checkAll;
            this.tableData.forEach(function (item) {
                item.check = !flag;
            });
        },
        prev: function () {
            if (this.currentIndex <= 0) {
                return;
            }
            this.getTableData(this.currentIndex - 1);
        },
        next: function () {
            if (this.currentIndex >= this.totalPage - 1) {
                return;
            }
            this.getTableData(this.currentIndex + 1);
        },
        changeIndex: function (index) {
            this.getTableData(index - 1);
        },
        toFirst: function () {
            this.getTableData(0);
        },
        toLast: function () {
            this.getTableData(this.totalPage - 1);
        },
        //公共方法
        showDialog: function (dia1, dia2, callback, msg) {
            if (msg) {
                this.diaMsg = msg;
            }
            else {
                msg = '输入条件错误';
            }
            if (!dia1) {
                $('#' + dia2).modal('show');
            }
            else if (!dia2) {
                $('#' + dia1).modal('hide');
            }
            else if (!callback) {
                $('#' + dia1).on("hidden.bs.modal", function () {
                    $('#' + dia2).modal('show');
                    $('#' + dia1).off().on("hidden", "hidden.bs.modal");
                });
                $('#' + dia1).modal('hide');
            }
            else {
                $('#' + dia1).on("hidden.bs.modal", function () {
                    $('#' + dia2).on("hidden.bs.modal", function () {
                        $('#' + dia1).modal("show");
                        $('#' + dia2).off().on("hidden", "hidden.bs.modal");
                    });
                    $('#' + dia2).modal("show");
                    $('#' + dia1).off().on("hidden", "hidden.bs.modal");
                });
                $('#' + dia1).modal('hide');
            }
        },
        inSelected: function (item, arr, prop) {
            var _index = -1;
            arr.forEach(function (value, index) {
                if (item[prop] == value[prop]) {
                    _index = index;
                }
            });
            return _index;
        },
        formatTime: function (timestamp) {
            var date = new Date(timestamp); //时间戳为10位需*1000，时间戳为13位的话不需乘1000
            var Y = date.getFullYear() + '-';
            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
            var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';
            var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
            var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
            var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());
            return Y + M + D + h + m + s;
        },
        overflowHide: function (val) {
            if(val){
                var str = val.toString();
                if (str.length > 10) {
                    str = str.substring(0, 10) + '...'
                }
            }else{
                str='-';
            }

            return str;
        },
        stringTimeFat: function (val) {
            if (val) {
                if (val.length > 8) {
                    return val.replace(/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/g, '$1-$2-$3 $4:$5:$6')
                } else {
                    return val.replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3')
                }
            } else {
                return '-'
            }
        },
        backTimeFat: function (val) {
            if (val) {
                val=val.toString();
                var arr=val.split("-");
                var brr=arr[arr.length-1].split('.');
                try {
                    arr[1]=arr[1].length>1?arr[1]:'0'+arr[1];
                    brr[0]=brr[0].length>1?brr[0]:'0'+brr[0];
                    brr[1]=brr[1].length>1?brr[1]:'0'+brr[1];
                    brr[2]=brr[2].length>1?brr[2]:'0'+brr[2];
                    brr[3]=brr[3].trim().length>1?brr[3].trim():'0'+brr[3].trim();
                    val=arr[0]+'-'+arr[1]+'-'+brr[0]+' '+brr[1]+':'+brr[2]+':'+brr[3]
                }
                catch(err){
                    val=val.toString();
                }
            } else {
                val = '-'
            }
            return val;
        }

    }
});
