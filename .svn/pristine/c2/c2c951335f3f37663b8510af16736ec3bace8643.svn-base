const request = require('../../../local_data/requestWrapper');
const apiUrl = require('../apiConfig').monitoring.reportForms;
module.exports = function (app) {
    // 获取  查询列表
    app.post('/productIndexes/monitoring/reportForms/tableData.ajax', (req, res, next) => {
        let params = req.body;
				params.user = req.session.loginInfo.userid
        let option = {
            req,
            pageUrl: '/productIndexes/monitoring/reportForms/tableData.ajax',
            url: apiUrl.tableData,
            qs: params,
            timeout: 15000,
            json: true
        };

        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '数据获取失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result && result.returnCode == '0') {
								let resultData = result.body;
								let resultDataCopy = JSON.parse(JSON.stringify(resultData));
								resultDataCopy.forEach(item=>{
									let allIndexShowVOList = [];
									item.productAllPrdMonitorDetailVOList.forEach(item=>{
										allIndexShowVOList=allIndexShowVOList.concat(item.prdMonitorIndexShowVOList)
									})
									let obj = {};
									// 聚合后的所有的indexIDList	
									allIndexShowVOList = allIndexShowVOList.reduce((item, next)=>{
										obj[next.indexId] ? '' : obj[next.indexId] = true && item.push(next);
										return item;
									}, []);
									item.productAllPrdMonitorDetailVOList.forEach(iitem=>{
										// 当前item所有的indexID
										// console.log(currentIndexShowVOList);
										// let arr = [];
										let copyAllIndexShowVOList = JSON.parse(JSON.stringify(allIndexShowVOList)).map((item)=>{
											item.indexValue = null;
											item.indexValueDesc = '--';
											item.showColor = 0;
											item.targetValue = null;
											item.alarmValue = null;
											item.alarmTrigger = null;
											item.resultRemark = '';
											return item
										})
										// console.log(object);
										iitem.prdMonitorIndexShowVOList = copyAllIndexShowVOList.map((item)=>{
											iitem.prdMonitorIndexShowVOList.forEach(citem=>{
												if(item.indexId == citem.indexId){
													item.indexValue = citem.indexValue;
													item.indexValueDesc = citem.indexValueDesc;
													item.showColor = citem.showColor;
													item.targetValue = citem.targetValue;
													item.alarmValue = citem.alarmValue;
													item.alarmTrigger = citem.alarmTrigger;
													item.resultRemark = citem.resultRemark;
												}
											})
											return item
										})
									})
								})
                res.send({
                    error: 0,
                    msg: '调用成功',
                    data: resultDataCopy
                });
            } else if (result && result.returnCode == 9999) {
                res.send({
                    error: 1,
                    msg: '调用失败'
                });
            } else {
                res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            }
        });
    });
};