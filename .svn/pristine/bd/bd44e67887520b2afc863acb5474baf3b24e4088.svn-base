const request = require('../../../local_data/requestWrapper');
const apiUrlList = require('../apiConfig').productMaterial.investPrefecture;
const baseUrl = '/contentMgmt/productMaterial/investPrefecture';
const fs = require('fs');
const path = require('path');
const formidable = require('formidable');
const apiConfig = require('../apiConfig');
const filePathExternal = apiConfig.filePathExternal + '/productMaterial';
const filePathExternalReal = apiConfig.filePathExternal + '/productMaterial/investPrefecture';
const filePathExternalBak = apiConfig.filePathExternal + '/productMaterial/investPrefecture/bak';
const filePathExternal_url = apiConfig.filePafilePathExternalthUrl + '/productMaterial/investPrefecture';//返回给前端的路径
module.exports = function (app) {
    // 获取初始主页面数据和查询
    app.post('/contentMgmt/productMaterial/investPrefecture/getTableData.ajax', (req, res, next) => {
        let params = {};
        params.categoryId=req.body.categoryId;
        params.mediaType=req.body.mediaType;
        console.log("------------",params);
        let option = {
            pageUrl: '/contentMgmt/productMaterial/investPrefecture/getTableData.ajax',
            req,
            url: apiUrlList.getTableData,
            qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            console.log("body==", body);
            console.log("result==", result);
            if (result && result.returnCode === 0) {
                return res.send({
                    error: 0,
                    msg: '查询成功',
                    data: body
                });
            } else if (result && result.returnCode != 9999) {
                return res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                return res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
        });
    });
    // 新增
    app.post(`${baseUrl}/add.ajax`, (req, res, next) => {
        let params = req.body;
        let option = {
            pageUrl: `${baseUrl}/add.ajax`,
            req: req,
            // operateType: 1, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.add,
            body: params,
            timeout: 15000,
            json: true
        };
        request.post(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '保存失败',
                    data: null
                });
            }
            if (body.returnCode === 0) {
                res.send({
                    error: 0,
                    msg: '保存成功',
                    data: null
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg,
                    data: null
                });
            } else {
                res.send({
                    error: 1,
                    msg: '保存失败',
                    data: null
                });
            }
        });
    });
    // 修改
    app.post(`${baseUrl}/update.ajax`, (req, res, next) => {
        let params = req.body;
        let option = {
            pageUrl: `${baseUrl}/update.ajax`,
            req: req,
            // operateType: 1, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.update,
            body: params,
            timeout: 15000,
            json: true
        };
        request.post(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '修改失败',
                    data: null
                });
            }
            if (body.returnCode === 0) {
                res.send({
                    error: 0,
                    msg: '修改成功',
                    data: null
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg,
                    data: null
                });
            } else {
                res.send({
                    error: 1,
                    msg: '修改失败',
                    data: null
                });
            }
        });
    });

    // 删除
    app.post('/contentMgmt/tagMgmt/tagClassifyMgmt/deleteParam.ajax', (req, res, next) => {
        let params = {};
        params.tagCategoryId = req.body.tagCategoryId;
        let option = {
            pageUrl: '/contentMgmt/tagMgmt/tagClassifyMgmt/deleteParam.ajax',
            req,
            operateType: 3, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.deleteParam,
            qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '删除失败',
                    data: null
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result && result.returnCode === 0) {
                return res.send({
                    error: 0,
                    msg: '删除成功',
                    data: null
                });
            } else if (result && result.returnCode != 9999) {
                return res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                return res.send({
                    error: 1,
                    msg: '删除失败',
                    data: null
                });
            }
        });
    });
    // 获取一二级分类
    app.post('/contentMgmt/productMaterial/investPrefecture/classifyList.ajax', (req, res, next) => {
        let params = {};
        // console.log("------------",params)
        let option = {
            pageUrl: '/contentMgmt/productMaterial/investPrefecture/classifyList.ajax',
            req,
            url: apiUrlList.classifyList,
            // body: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '查询一二级分类失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            console.log("body==", body);
            console.log("result==", result);
            if (result && result.returnCode === 0) {
                return res.send({
                    error: 0,
                    msg: '查询成功',
                    data: body
                });
            } else if (result && result.returnCode != 9999) {
                return res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                return res.send({
                    error: 1,
                    msg: '查询一二级分类失败'
                });
            }
        });
    });

    // 获取三级分类
    app.post('/contentMgmt/productMaterial/investPrefecture/threeClassifyList.ajax', (req, res, next) => {
        let params = {};
        params.parentCategoryId=req.body.parentCategoryId;
        let option = {
            pageUrl: '/contentMgmt/productMaterial/investPrefecture/threeClassifyList.ajax',
            req,
            url: apiUrlList.threeClassifyList,
            qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '查询三级分类失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            console.log("body==", body);
            console.log("result==", result);
            if (result && result.returnCode === 0) {
                return res.send({
                    error: 0,
                    msg: '查询成功',
                    data: body
                });
            } else if (result && result.returnCode != 9999) {
                return res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                return res.send({
                    error: 1,
                    msg: '查询三级分类失败'
                });
            }
        });
    });

    // 上传材料
    app.post('/contentMgmt/productMaterial/investPrefecture/uploadImg.ajax', (req, res, next) => {
        try {
            !fs.existsSync(apiConfig.filePathExternal) && fs.mkdirSync(apiConfig.filePathExternal);
            !fs.existsSync(filePathExternal) && fs.mkdirSync(filePathExternal);
            !fs.existsSync(filePathExternalReal) && fs.mkdirSync(filePathExternalReal);
            !fs.existsSync(filePathExternalBak) && fs.mkdirSync(filePathExternalBak);
            let form = new formidable.IncomingForm();
            form.uploadDir = filePathExternalReal;
            form.keepExtensions = true;
            form.parse(req, (err, fields, files) => {
                console.log('数据接收完毕:', fields);
                console.log('文件接收完毕:', files);
                let originFilePath = path.resolve(files.file.path);
                // 带后缀文件名
                let originFileName = files.file.name;
                // 不带后缀
                let fileExtname = path.extname(originFileName);//文件扩展名
                let simplifyName = originFileName.split(fileExtname)[0];//不带扩展名的文件名
                try {
                        if(fs.existsSync(path.resolve(filePathExternalReal,originFileName))){
                            const fileReName  = `${simplifyName}-${new Date().getTime()}${fileExtname}`;
                            // const fileReName  = `${simplifyName}-${currentCST()}${fileExtname}`;
                            const oldPath = path.resolve(filePathExternalReal,originFileName);
                            const newPath = path.resolve(filePathExternalBak,fileReName);
                            console.log('historyBakPath:',newPath);
                            console.log('historyBakName:',fileReName);
                            fs.renameSync(oldPath,newPath);
                        }
                        let reader = fs.createReadStream(originFilePath);
                        let writer = fs.createWriteStream(`${filePathExternalReal}/${originFileName}`);
                        console.log('uploadFilePath:',`${filePathExternalReal}/${originFileName}`);
                        reader.pipe(writer);
                        writer.on('finish',()=>{
                                // 写入成功后执行
                                try {
                                        fs.unlinkSync(originFilePath);
                                        res.send({
                                                error: 0,
                                                msg: '上传成功',
                                                data: {
                                                    imageUrl: `${filePathExternal_url}/${originFileName}`
                                                }
                                        });
                                } catch (error) {
                                        console.log('writer inner--------',error);
                                        fs.unlinkSync(originFilePath);
                                        res.send({
                                                error: 1,
                                                msg: error,
                                                data: null
                                        });
                                }
                        });
                } catch (error) {
                        console.log('writer outter--------',error);
                        fs.unlinkSync(originFilePath);
                        res.send({
                                error: 1,
                                msg: error,
                                data: null
                        });
                }
            });
        } catch (error) {
            console.log('/contentMgmt/productMaterial/investPrefecture/uploadImg.ajax -------- 文件上传失败error:', error);
                res.send({
                        error: 0,
                        msg: '上传失败',
                        data: null
                });
        }
});

}