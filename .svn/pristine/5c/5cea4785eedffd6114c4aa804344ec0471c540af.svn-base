const request = require('../../../local_data/requestWrapper');
const apiUrlList = require('../apiConfig').combinationProductConfig.combinationProductHandle;
const tableName = 'bm_cpc_combination';
try {
    const mysql = require('mysql');
    const mysqlConfig = require('../apiConfig').mysqlConfig;
    var mysqlPool = mysql.createPool(Object.assign({connectionLimit: 10}, mysqlConfig))
} catch (error) {
    console.log('mysqlPool error=', error)
}

module.exports = function (app) {
//查询列表数据
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax', (req, res, next) => {
        let paramsStatus = {};
        paramsStatus.type = req.body.type;
        let reviewStatus = req.body.reviewStatus; //复核状态值
        // 查询本地数据库
        if (paramsStatus.type == "1") {
            let sql = `SELECT content,local_id,status,delete_flag,operate,operator,creator,reviewer,review_time,update_timestamp,remark FROM ${tableName} WHERE delete_flag='F' AND creator='${req.session.loginInfo.userid}'`;
            if (req.body.reviewStatus) {
                sql += ` AND status='${req.body.reviewStatus}'`;
            }
            if (req.body.groupid) {
                sql += ` AND JSON_EXTRACT(content, '$.groupid')='${req.body.groupid}'`;
            }
            sql += ' ORDER BY update_timestamp DESC';
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax sql:', sql);
            mysqlPool.query(sql, function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '操作失败'});
                }
                // 获取mysql数据字段ID
                let middleArr = JSON.parse(JSON.stringify(results));
                console.log("middleArr:",middleArr)
                middleArr = middleArr.map(item => {
                    let content = JSON.parse(item.content);
                    content.mySQLId = item.local_id;
                    content.mysqlStatus = item.status;
                    content.delete_flag = item.delete_flag;
                    content.operate = item.operate;
                    content.operator = item.operator;
                    content.creator = item.creator;
                    content.reviewer = item.reviewer; //复核人
                    content.review_time = item.review_time;//复核时间
                    content.update_timestamp = item.update_timestamp;//更新时间
                    content.revise_remark = item.remark;   //驳回备注
                    return content;
                });
                console.log("-----", middleArr)
                return res.send({error: 0, msg: '获取成功', data: middleArr});
            });
        }
        // 查询业务数据
        if (paramsStatus.type == "0") {
           let params={}
           params.groupId=req.body.groupId;
            // 查询后端业务数据
            let option = {
                session: req.session,
                url: apiUrlList.getTableData,
                qs: params,
                timeout: 15000,
                json: true
            };
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax option:', option);
            request.get(option, (error, response, body) => {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax statusCode:', response && response.statusCode);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/getTableData.ajax body:', body);
                if (error) {
                    return res.send({
                        error: 1,
                        msg: '查询失败'
                    });
                }
                let result = typeof body === 'string' ? JSON.parse(body) : body;
                if (result.returnCode == 0 && Array.isArray(result.body)) {
                    let resultData = {};
                    var ArrInfo=[]
                    // result.body.forEach((item) => {
                    //     ArrInfo.push(item.baseInfo)
                    // })
                    ArrInfo=result.body.map((item,index)=>{
                        let content =item.baseInfo;
                        content.detailList = item.detailList;
                        return content
                    })
                    console.log("ArrInfo==",ArrInfo)
                    // resultData.tableData = result.body;
                    resultData.tableData = ArrInfo;
                    // resultData.detailList = result.body.detailList;
                    res.send({error: 0, msg: '查询成功', data: resultData});
                }
                else if (result && result.returnCode != 9999) {
                    return res.send({error: 1, msg: result.returnMsg});
                }
                else {
                    return res.send({error: 1, msg: '查询失败'});
                }
            });

        }
    });

//添加保存数据;
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax', (req, res, next) => {
        // 由我经办增加保存
        let paramsStatus = {};
        paramsStatus.type = req.body.type;   //传过来的状态数值
        let params = {};
        // params.id = req.body.id;

        params.fundgroupType = req.body.fundgroupType;
        params.groupid = req.body.groupid;
        params.groupname = req.body.groupname;
        params.stringEstablishDate = req.body.stringEstablishDate;
        // params.fundgroupDesc = req.body.fundgroupDesc;
        // params.fundgroupAdvise = req.body.fundgroupAdvise;
        // params.proPageurl = req.body.proPageurl;
        // params.normalPageurl = req.body.normalPageurl;
        // params.stopStatus = req.body.stopStatus;
        // params.ageRange=req.body.ageRange;      //年龄段
        // params.sofarYield=req.body.sofarYield;    //收益率
        // params.branchCode=req.body.branchCode;       //网点
        // params.acceptMode=req.body.acceptMode;       //渠道
        // params.cooPreationMode=req.body.cooPreationMode;       //合作模式;
        // params.stopStartTime=req.body.stopStartTime;         //暂停开始时间
        // params.stopEndTime=req.body.stopEndTime;
        //
        params.grouptype = req.body.grouptype;
        // params.risklevel = req.body.risklevel;
        // params.initamount = req.body.initamount;
        // params.commro = req.body.commro;
        // params.minRedeemAmount = req.body.minRedeemAmount;
        // params.minChangeAmount = req.body.minChangeAmount;
        // params.minReserveAmount = req.body.minReserveAmount;
        params.onlinedate = req.body.onlinedate;
        params.rightPercent=req.body.rightPercent;                //权益类占比
        params.fixPercent=req.body.fixPercent;         //固收类占比
        params.vaPercent=req.body.vaPercent ;        //货币类占比
        params.otherPercent=req.body.otherPercent;


        params.fundgroupChangeROList=req.body.fundgroupChangeROList;
        params.fundgroupNewFundgroupDO=req.body.fundgroupNewFundgroupDO;
        params.fundgroupSubdatetimeRO=req.body.fundgroupSubdatetimeRO;


        params.operator = req.body.operator;
        let operatorName = req.session.loginInfo.userid //操作人

        params = JSON.stringify(params)

        if (paramsStatus.type == "1") {
            var sql = `insert into ${tableName} set ?,delete_flag="F",creator='${operatorName}',operator='${operatorName}',operate=1,comment=1,status="2"`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax params:', params);
            mysqlPool.query(sql, {content: params}, function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/saveParam.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '保存失败'});
                }
                return res.send({error: 0, msg: '保存成功', data: results});
            });
        }
    });

//修改业务数据存到经办数据库中;
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax', (req, res, next) => {
        //修改本地Mysql参数
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        let operate = req.body.operate     //操作类型
        //经办现有折扣修改业务产品参数
        if (paramsStatus.type == "0") {
            let oneId = req.body.oneId
            let params = {};
            // 产品参数
            params.serialno = req.body.serialno;


            params.fundgroupType = req.body.fundgroupType;
            params.groupid = req.body.groupid;
            params.groupname = req.body.groupname;
            params.stringEstablishDate = req.body.stringEstablishDate;
            params.grouptype = req.body.grouptype;
            params.onlinedate = req.body.onlinedate;
            params.rightPercent=req.body.rightPercent;                //权益类占比
            params.fixPercent=req.body.fixPercent;         //固收类占比
            params.vaPercent=req.body.vaPercent ;        //货币类占比
            params.otherPercent=req.body.otherPercent;
            params.fundgroupChangeROList=req.body.fundgroupChangeROList;
            params.fundgroupNewFundgroupDO=req.body.fundgroupNewFundgroupDO;
            params.fundgroupSubdatetimeRO=req.body.fundgroupSubdatetimeRO;


            req.body.operator = req.body.operator;
            var updateTime = req.body.updateTime  //获取修改的时间

            let operatorName = req.session.loginInfo.userid //操作人

            // id不同则新增
            // if (oneId != params.id) {
            params = JSON.stringify(params)
            var sql = `insert into ${tableName} set ?,delete_flag="F",service_id='${req.body.groupid}',creator='${operatorName}',operator='${operatorName}',operate=2,status="2"`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax params:', params);
            mysqlPool.query(sql, {content: params}, function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/serviceSave.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '保存失败'});
                }
                return res.send({error: 0, msg: '已提交至经办数据', data: results});
            });


        }
    });

//修改本地数据;
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax', (req, res, next) => {
        //修改本地Mysql参数
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        let operate = req.body.operate     //操作类型
        if (paramsStatus.type == "1") {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id
            // 业务产品参数
            let params = {};

            params.fundgroupType = req.body.fundgroupType;
            params.groupid = req.body.groupid;
            params.groupname = req.body.groupname;
            params.stringEstablishDate = req.body.stringEstablishDate;
            params.grouptype = req.body.grouptype;
            params.onlinedate = req.body.onlinedate;
            params.rightPercent=req.body.rightPercent;                //权益类占比
            params.fixPercent=req.body.fixPercent;         //固收类占比
            params.vaPercent=req.body.vaPercent ;        //货币类占比
            params.otherPercent=req.body.otherPercent;
            params.fundgroupChangeROList=req.body.fundgroupChangeROList;
            params.fundgroupNewFundgroupDO=req.body.fundgroupNewFundgroupDO;
            params.fundgroupSubdatetimeRO=req.body.fundgroupSubdatetimeRO;


            req.body.operator = req.body.operator;

            let operatorName = req.session.loginInfo.userid //操作人
            var updateTime = req.body.updateTime  //获取修改的时间
            params = JSON.stringify(params)
            if (operate == '1') {
                var sql = `UPDATE ${tableName} SET content=?,status='2',operate='1',operator='${operatorName}',update_timestamp=? where local_id=?`;
            } else if (operate == '2') {
                var sql = `UPDATE ${tableName} SET content=?,status='2',operate='2',operator='${operatorName}',update_timestamp=? where local_id=?`;
            } else if (operate == '3') {
                var sql = `UPDATE ${tableName} SET content=?,status='2',operate='3',operator='${operatorName}',update_timestamp=? where local_id=?`;
            }
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax params:', params);
            mysqlPool.query(sql, [params, updateTime, mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/localRevise.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '修改失败'});
                }
                return res.send({error: 0, msg: '修改成功', data: results});
            });
        }
    });

//删除业务数据存到本地数据库中;
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax', (req, res, next) => {
        // 删除本地数据-软删除
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        var operate = req.body.operate
        if (paramsStatus.type == "0") {
            let oneId = req.body.oneId
            let params = {};
            // 产品参数
            params.serialno = req.body.serialno;
            params.groupid = req.body.groupid;
            params.actionType = req.body.actionType;
            params.startDate = req.body.startDate;
            params.startTime = req.body.startTime;
            params.endDate = req.body.endDate;
            params.endTime = req.body.endTime;
            req.body.operator = req.body.operator;
            params.accoType = req.body.accoType;

            let operatorName = req.session.loginInfo.userid //操作人
            // id不同则新增
            // if (oneId != params.id) {
            params = JSON.stringify(params)
            var sql = `insert into ${tableName} set ?,delete_flag="F",service_id='${req.body.serialno}',creator='${operatorName}',operator='${operatorName}',operate=3,status="2"`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax params:', params);
            mysqlPool.query(sql, {content: params}, function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteParam.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '保存失败'});
                }
                return res.send({error: 0, msg: '已提交至经办数据', data: results});
            });
        }

        // }
    });

//撤销本地数据
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax', (req, res, next) => {
        // 撤销本地数据-软删除
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        var operate = req.body.operate
        if (paramsStatus.type == "1") {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id

            let params = {};
            params.fundgroupType = req.body.fundgroupType;
            params.groupid = req.body.groupid;
            params.groupname = req.body.groupname;
            params.stringEstablishDate = req.body.stringEstablishDate;
            params.grouptype = req.body.grouptype;
            params.onlinedate = req.body.onlinedate;
            params.rightPercent=req.body.rightPercent;                //权益类占比
            params.fixPercent=req.body.fixPercent;         //固收类占比
            params.vaPercent=req.body.vaPercent ;        //货币类占比
            params.otherPercent=req.body.otherPercent;
            params.fundgroupChangeROList=req.body.fundgroupChangeROList;
            params.fundgroupNewFundgroupDO=req.body.fundgroupNewFundgroupDO;
            params.fundgroupSubdatetimeRO=req.body.fundgroupSubdatetimeRO;

            params.operator = req.body.operator;

            let operatorName = req.session.loginInfo.userid //操作人
            params = JSON.stringify(params)
            // if(operate=='1'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=1,status='1' where id=?";
            // }else if (operate=='2'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=2,status='1' where id=?";
            // }else if (operate=='3'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=3,status='1' where id=?";
            // }
            var sql = `UPDATE ${tableName} SET delete_flag='T',operate=3,status='1',operator='${operatorName}' where local_id=?`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax params:', params);
            mysqlPool.query(sql, [mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteLocal.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '撤销失败'});
                }
                return res.send({error: 0, msg: '撤销成功', data: results});
            });
        }
    });

//重新提删除操作数据
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax', (req, res, next) => {
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        var operate = req.body.operate
        if (paramsStatus.type == "1") {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id

            let params = {};
            req.body.id && (params.id = req.body.id);

            params.serialno = req.body.serialno;
            params.groupid = req.body.groupid;
            params.actionType = req.body.actionType;
            params.startDate = req.body.startDate;
            params.startTime = req.body.startTime;
            params.endDate = req.body.endDate;
            params.endTime = req.body.endTime;

            req.body.operator = req.body.operator;
            let operatorName = req.session.loginInfo.userid //操作人
            params = JSON.stringify(params)
            // if(operate=='1'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=1,status='1' where id=?";
            // }else if (operate=='2'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=2,status='1' where id=?";
            // }else if (operate=='3'){
            //     var sql = "UPDATE bm_bpc_quota SET delete_flag='T',operate=3,status='1' where id=?";
            // }
            var sql = `UPDATE ${tableName} SET delete_flag='F',operate=3,status='2',operator='${operatorName}' where local_id=?`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax params:', params);
            mysqlPool.query(sql, [mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/deleteAgain.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '提交失败'});
                }
                return res.send({error: 0, msg: '提交成功', data: results});
            });
        }
    });

//提交数据操作;
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax', (req, res, next) => {
        //由我经办修改本地Mysql参数
        let paramsStatus = {};
        paramsStatus.type = req.body.type; //传过来的状态数值
        var operate = req.body.operate
        if (paramsStatus.type == "1" && operate == '2') {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id
            // 业务产品参数
            let params = {};
            req.body.id && (params.id = req.body.id);
            params.serialno = req.body.serialno;
            params.groupid = req.body.groupid;
            params.actionType = req.body.actionType;
            params.startDate = req.body.startDate;
            params.startTime = req.body.startTime;
            params.endDate = req.body.endDate;
            params.endTime = req.body.endTime;
            req.body.operator && (params.operator = req.body.operator);

            var updateTime = req.body.updateTime  //获取修改的时间
            params = JSON.stringify(params)
            var sql = `UPDATE ${tableName} SET content=?,status='2',operate='2',delete_flag='F',update_timestamp=? where id=?`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax sql:', sql);
            console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax params:', params);
            mysqlPool.query(sql, [params, updateTime, mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '提交失败'});
                }
                return res.send({error: 0, msg: '提交成功', data: results});
            });
        }
        if (paramsStatus.type == "1" && operate == '1') {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id
            // 业务产品参数
            let params = {};
            req.body.id && (params.id = req.body.id);
            req.body.product && (params.product = req.body.product);
            req.body.apkind && (params.apkind = req.body.apkind);
            req.body.tradeType && (params.tradeType = req.body.tradeType);
            req.body.custType && (params.custType = req.body.custType);
            req.body.branchCode && (params.branchCode = req.body.branchCode);
            req.body.channel && (params.channel = req.body.channel);
            req.body.bankNo && (params.bankNo = req.body.bankNo);
            req.body.remark && (params.remark = req.body.remark);
            req.body.subApkind && (params.subApkind = req.body.subApkind);
            req.body.quotaType && (params.quotaType = req.body.quotaType);
            req.body.startTime && (params.startTime = req.body.startTime);
            req.body.endTime && (params.endTime = req.body.endTime);
            req.body.maxQuota && (params.maxQuota = req.body.maxQuota);
            req.body.minQuota && (params.minQuota = req.body.minQuota);
            req.body.operator && (params.operator = req.body.operator);

            var updateTime = req.body.updateTime  //获取修改的时间
            params = JSON.stringify(params)
            var sql = `UPDATE ${tableName} SET content=?,status='2',operate='1',delete_flag='F',update_timestamp=? where id=?`;
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax sql:', sql);
            console.log('/businessMgmt/combinationProductConfig/productTradeHandle/submitCheck.ajax params:', params);
            mysqlPool.query(sql, [params, updateTime, mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax error:', error);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax results:', results);
                console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/submitCheck.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '提交失败'});
                }
                return res.send({error: 0, msg: '提交成功', data: results});
            });
        }
        if (paramsStatus.type == "1" && operate == '3') {
            let mysqlId = req.body.myqsql //获取传过来数据库表字段的id
            // 业务产品参数
            let params = {};
            req.body.id && (params.id = req.body.id);
            req.body.product && (params.product = req.body.product);
            req.body.apkind && (params.apkind = req.body.apkind);
            req.body.tradeType && (params.tradeType = req.body.tradeType);
            req.body.custType && (params.custType = req.body.custType);
            req.body.branchCode && (params.branchCode = req.body.branchCode);
            req.body.channel && (params.channel = req.body.channel);
            req.body.bankNo && (params.bankNo = req.body.bankNo);
            req.body.remark && (params.remark = req.body.remark);
            req.body.subApkind && (params.subApkind = req.body.subApkind);
            req.body.quotaType && (params.quotaType = req.body.quotaType);
            req.body.startTime && (params.startTime = req.body.startTime);
            req.body.endTime && (params.endTime = req.body.endTime);
            req.body.maxQuota && (params.maxQuota = req.body.maxQuota);
            req.body.minQuota && (params.minQuota = req.body.minQuota);
            req.body.operator && (params.operator = req.body.operator);

            var updateTime = req.body.updateTime  //获取修改的时间
            params = JSON.stringify(params)
            var sql = "UPDATE cs_ticket SET delete_flag='T',operate='3',status='2',update_timestamp=? where id=?";
            console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax sql:', sql);
            console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax params:', params);
            mysqlPool.query(sql, [updateTime, mysqlId], function (error, results, fields) {
                console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax error:', error);
                console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax results:', results);
                console.log('/businessMgmt/businessParamConfig/combinationProductHandle/submitCheck.ajax fields:', fields);
                if (error) {
                    return res.send({error: 1, msg: '提交失败'});
                }
                return res.send({error: 0, msg: '提交成功', data: results});
            });
        }
    });


// 获取用户信息
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/userName.ajax', (req, res, next) => {
        let operator = req.session.loginInfo.userid
        return res.send({error: 0, msg: '成功', data: operator});
    });
// 获取所有组合
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroups.ajax', (req, res, next) => {
        let params={}
        params.groupId="ALL";
        let option = {
            session: req.session,
            url: apiUrlList.fundGroups,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroups.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroups.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroups.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroups.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});
            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取失败'});
            }
        });

    });

//添加按钮获取所有基金
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/fundList.ajax', (req, res, next) => {
        let option = {
            session: req.session,
            url: apiUrlList.fundList,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundList.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundList.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundList.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundList.ajax body:', body);
            if (error) {
                return res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result && result.returnCode == '0') {
                result.body.forEach(item => {
                    item.check = false;
                    item.fundPercent = '';
                });
                return res.send({error: 0, msg: '查询成功', data: body});
            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '查询失败'});
            }
        });
    });

// 获取网点类型下拉数据
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/branchCodeList.ajax', (req, res, next) => {
        let params = {};
        params.pmst = req.body.pmst;
        params.pmkey = req.body.pmkey;
       console.log("---",params)
        let option = {
            session: req.session,
            url: apiUrlList.branchCodeList,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/branchCodeList.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/branchCodeList.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/branchCodeList.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/branchCodeList.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作网点号失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});

                // result.body = result.body.filter(item => item.pmv1 !== 'A' && item.pmv1 !== 'C');
                // return res.send({error: 0, msg: '获取网点号成功', data: result});

            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取网点号失败'});
            }
        });

    });
// 获取组合类型下拉数据
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroupType.ajax', (req, res, next) => {
        let params = {};
        params.pmst = req.body.pmst;
        params.pmkey = req.body.pmkey;
        console.log("---",params)
        let option = {
            session: req.session,
            url: apiUrlList.fundGroupType,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroupType.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroupType.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroupType.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/fundGroupType.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});

                // result.body = result.body.filter(item => item.pmv1 !== 'A' && item.pmv1 !== 'C');
                // return res.send({error: 0, msg: '获取网点号成功', data: result});

            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取失败'});
            }
        });

    });
//获取年临段
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/ageRangeList.ajax', (req, res, next) => {
        let params = {};
        params.pmst = req.body.pmst;
        params.pmkey = req.body.pmkey;
        console.log("---",params)
        let option = {
            session: req.session,
            url: apiUrlList.ageRangeList,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/ageRangeList.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/ageRangeList.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/ageRangeList.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/ageRangeList.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});

                // result.body = result.body.filter(item => item.pmv1 !== 'A' && item.pmv1 !== 'C');
                // return res.send({error: 0, msg: '获取网点号成功', data: result});

            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取失败'});
            }
        });

    });
// 获取风险类型
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/grouptypeList.ajax', (req, res, next) => {
        let params = {};
        params.pmst = req.body.pmst;
        params.pmkey = req.body.pmkey;
        console.log("---",params)
        let option = {
            session: req.session,
            url: apiUrlList.grouptypeList,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/grouptypeList.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/grouptypeList.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/grouptypeList.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/grouptypeList.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});

                // result.body = result.body.filter(item => item.pmv1 !== 'A' && item.pmv1 !== 'C');
                // return res.send({error: 0, msg: '获取网点号成功', data: result});

            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取失败'});
            }
        });

    });
// 获取风险等级
    app.post('/businessMgmt/combinationProductConfig/combinationProductHandle/risklevelList.ajax', (req, res, next) => {
        let params = {};
        params.pmst = req.body.pmst;
        params.pmkey = req.body.pmkey;
        console.log("---",params)
        let option = {
            session: req.session,
            url: apiUrlList.risklevelList,
            qs: params,
            timeout: 15000,
            json: true
        };
        console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/risklevelList.ajax option:', option);
        request(option, (error, response, body) => {
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/risklevelList.ajax error:', error);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/risklevelList.ajax statusCode:', response && response.statusCode);
            console.log('/businessMgmt/combinationProductConfig/combinationProductHandle/risklevelList.ajax body:', body);
            if (error) {
                return res.send({error: 1, msg: '操作失败'});
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                return res.send({error: 0, msg: '获取成功', data: result});

                // result.body = result.body.filter(item => item.pmv1 !== 'A' && item.pmv1 !== 'C');
                // return res.send({error: 0, msg: '获取网点号成功', data: result});

            }
            else if (result && result.returnCode != 9999) {
                return res.send({error: 1, msg: result.returnMsg});
            }
            else {
                return res.send({error: 1, msg: '获取失败'});
            }
        });

    });

};