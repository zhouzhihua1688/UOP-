Vue.use(window['vue-cropper']);
Vue.component('selectChosen2', {
	template: `
			<select class="chosen-select form-control" ref="sele">
					<option value="">请选择</option>
					<option v-if="modeType=='1'" :value="item[keyList[0]]+','+item[keyList[1]]" v-for="item in list">{{'一级:'+item[keyList[0]]+'&nbsp;/&nbsp;二级:'+item[keyList[1]]}}</option>
			</select>
			`,
	model: {
		prop: "value",
		event: "change",
	},
	props: {
		value: {
			validator: () => true,
		},
		list: {
			type: [Object, Array],
			default: () => [],
		},
		width: String,
		keyList: {
			type: Array,
			default: () => [],
		},
		modeType: {
			type: String,
			default: '1'
		}
	},
	watch: {
		value: function () {
			$(this.$refs.sele).val(this.value);
			$(this.$refs.sele).trigger("chosen:updated");
		}
	},
	mounted() {
		console.log(this.list);
		$(this.$refs.sele).chosen({
			search_contains: true,
			no_results_text: '未找到',
			disable_search_threshold: 6,
			width: this.width || '138px'
		});
		$(this.$refs.sele).on('change', function (e, params) {
			this.$emit('change', params ? params.selected : '')
		}.bind(this));
	},
	updated() {
		$(this.$refs.sele).trigger("chosen:updated");
	},
})
new Vue({
	el: '#content',
	data: function () {
		return {
			tableData: [],
			branchList:[],
			currentIndex: 0,
			maxSpace: 5,
			totalPage: 0,
			pageMaxNum: 10,
			diaMsg: '',
			loadingShow: false, //loading动画
			showText: '数据加载中...',
			// vue-cropper的配置项
			option: {
				img: '',
				size: 1,
				full: false,
				outputType: 'png',
				canMove: true,
				fixedBox: true,
				original: false,
				canMoveBox: true,
				autoCrop: true,
				// 只有自动截图开启 宽度高度才生效
				autoCropWidth: 250,
				autoCropHeight: 200,
				centerBox: false,
				high: true,
				max: 99999
			},
			shareCoverImage:'',
			previews: {}, //剪切预览
			limitSize: 100, //compress压缩文件的最大kb
			//主页面所用字段
			// 搜索条件
			tableSearch:{
				custodianCode: "",
				fundManager: "",
				fundName: "",
				isTouliStatusChiying: "",
				isTouliStatusFirstIpo: "",
				isTouliStatusNormal: "",
				isTouliStatusSecondIpo: "",
				pageNo: 1,
				pageSize: 10,
				touliChannelList: [],
				touliFundtpList: []
			},
			allChecked: {
				fundTpList:{'checked': true},
				statusList:{'checked': true}
			}, //全部
			
			modifyStatus: '0',//产品信息的新增修改
			modifyStatus1:'0',//物料信息的新增修改
			// 新增修改弹窗字段
			// 新增修改产品数据
			productDataOperate:{
				"fundId": "",
				"fundinfoBase": {
					"fundChineseName": "",
					"fundId": "",
					"fundName": "",
					"fundRiskLevel": "",
					"fundType": ""
				},
				"touliFundinfo": {
					"fundId": "",
					"isChiying": "0",
					"isFirstIpo": "",
					"isNormal": "",
					"isSecondIpo": "0",
					"secondEndDate": "",
					"secondStartDate": "",
					"touliChannelList": [],
					"touliFundtpList": []//产品类型
				}
			},
			initProductData:{
				"fundId": "",
				"fundinfoBase": {
					"fundChineseName": "",
					"fundId": "",
					"fundName": "",
					"fundRiskLevel": "",
					"fundType": ""
				},
				"touliFundinfo": {
					"fundId": "",
					"isChiying": "0",
					"isFirstIpo": "",
					"isNormal": "",
					"isSecondIpo": "0",
					"secondEndDate": "",
					"secondStartDate": "",
					"touliChannelList": [],
					"touliFundtpList": []
				}
			},
			riskLevelList:[],
			xjbTypeList:[],
			// //产品类型list
			fundTpList: [{
				'name': '主动权益',
				'value':'ZD',
				'checked': true
				},
				{
					'name': '股债混',
					'value':'ZZ',
					'checked': true
				}, {
					'name': 'FOF',
					'value':'FOF',
					'checked': true
				},
				{
					'name': '指数',
					'value':'ZhiShu',
					'checked': true
				}, {
					'name': '另类投资',
					'value':'OT',
					'checked': true
				}
			], 
			statusList:[
				{
					'name': 'IPO首发',
					'value':'isTouliStatusFirstIpo',
					'checked': true
				},
				{
					'name': '二次首发',
					'value':'isTouliStatusSecondIpo',
					'checked': true
				}, {
					'name': '重点持营',
					'value':'isTouliStatusChiying',
					'checked': true
				},
				{
					'name': '普通产品',
					'value':'isTouliStatusNormal',
					'checked': true
				}
			],
			// 物料信息数据的新增与修改
			materialInfoOperate: {
				"pkgBottomContent": "",
				"productId": "",
				"shareThumbImageUrl": "baidu.com",
				"shareTitle": "",
				"modifyBy": "",
				"modifyTime": "",
			},
			baseUrl:'/contentMgmt/productData/productList'
		}
	},
	mounted: function () {
		var dialogs = ['info', 'del', 'batchOperation'];
		dialogs.forEach(function (id) {
			$('#' + id).on('shown.bs.modal', function () {
				var $this = $(this);
				var dialog = $this.find('.modal-dialog');
				var top = ($(window).height() - dialog.height()) / 2;
				dialog.css({
					marginTop: top
				});
			});
		});
		$('#dialogBranch').css({
			'width': '184px'
		}).select2({
				closeOnSelect: false
		})
		$("#dialogBranch").on("select2:close", function (e) {
				// e 的话就是一个对象 然后需要什么就 “e.参数” 形式 进行获取
				this.productDataOperate.touliFundinfo.touliChannelList = $("#dialogBranch").val() ? $("#dialogBranch").val() : []
		}.bind(this));
		$('#dialogFundTp').css({
			'width': '184px'
		}).select2({
				closeOnSelect: false
		})
		$("#dialogFundTp").on("select2:close", function (e) {
				// e 的话就是一个对象 然后需要什么就 “e.参数” 形式 进行获取
				this.productDataOperate.touliFundinfo.touliFundtpList = $("#dialogFundTp").val() ? $("#dialogFundTp").val() : []
		}.bind(this));
		$('#dialogxjbTp').css({
			'width': '100px'
		}).select2({
				closeOnSelect: false
		})
		$("#dialogxjbTp").on("select2:close", function (e) {
				// e 的话就是一个对象 然后需要什么就 “e.参数” 形式 进行获取
				this.productDataOperate.fundinfoBase.fundType = $("#dialogxjbTp").val() ? $("#dialogxjbTp").val().join(',') : ''
		}.bind(this));
		$('#queryBranch').css({
			'width': '184px'
		}).select2({
				closeOnSelect: false
		})
		$("#queryBranch").on("select2:close", function (e) {
				// e 的话就是一个对象 然后需要什么就 “e.参数” 形式 进行获取
				console.log($("#queryBranch").val());
				this.tableSearch.touliChannelList = $("#queryBranch").val() ? $("#queryBranch").val() : []
		}.bind(this));
		this.getTableData(0);
		this.getBranchList();
		this.getRiskLevelList();
		this.getxjbTypeList();
	},
	computed: {
		pageList: function () {
			var arr = [];
			if (this.totalPage <= 2 * this.maxSpace) {
				for (var i = 0; i < this.totalPage; i++) {
					arr.push(i + 1);
				}
				return arr;
			}
			if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
				for (var i = this.currentIndex - this.maxSpace; i < this.currentIndex + this.maxSpace; i++) {
					arr.push(i + 1);
				}
			} else if (this.currentIndex <= this.maxSpace && this.totalPage - this.currentIndex > this.maxSpace) {
				for (var i = 0; i < this.currentIndex + (2 * this.maxSpace - this.currentIndex); i++) {
					arr.push(i + 1);
				}
			} else if (this.currentIndex > this.maxSpace && this.totalPage - this.currentIndex <= this.maxSpace) {
				var space = this.totalPage - this.currentIndex;
				for (var i = this.currentIndex - (2 * this.maxSpace - space); i < this.totalPage; i++) {
					arr.push(i + 1);
				}
			} else {
				for (var i = 0; i < this.totalPage; i++) {
					arr.push(i + 1);
				}
			}
			return arr;
		},
		productStatus:function(){
			var str = '';
			if(this.productDataOperate&&this.productDataOperate.touliFundinfo){
				if(this.productDataOperate.touliFundinfo.isChiying!='1'&&this.productDataOperate.touliFundinfo.isFirstIpo!='1'&&this.productDataOperate.touliFundinfo.isSecondIpo!='1'){
					str += '普通产品';
				}else{
					if(this.productDataOperate.touliFundinfo.isChiying=='1'){
						str+='重点持盈,'
					}
					if(this.productDataOperate.touliFundinfo.isFirstIpo=='1'){
						str+='IPO首发,'
					}
					if(this.productDataOperate.touliFundinfo.isNormal=='1'){
						str+='普通产品,'
					}
					if(this.productDataOperate.touliFundinfo.isSecondIpo=='1'){
						str+='二次首发'
					}
				}
			}
			return str
		}
	},
	watch: {
		pageMaxNum: function () {
			this.getTableData(0);
		},
		fundTpList:{
			handler:function(){
				var fundTpListval = this.fundTpList.filter(function(item){
					return item.checked
				}).map(function(item){
					return item.value
				})
				// 监听数组的长度
				var len =	this.fundTpList.length
				if(fundTpListval.length===len){
					this.tableSearch.touliFundtpList=[];
				}else{
					this.tableSearch.touliFundtpList = fundTpListval
				}
			},
			deep:true
		},
		statusList:{
			handler:function(){
				var statusListval = this.statusList.filter(function(item){
					return item.checked
				}).map(function(item){
					return item.value
				})
				// 监听数组的长度
				var len =	this.statusList.length
				if(statusListval.length===0||statusListval.length===len){
					this.tableSearch.isTouliStatusChiying='';
					this.tableSearch.isTouliStatusFirstIpo='';
					this.tableSearch.isTouliStatusNormal='';
					this.tableSearch.isTouliStatusSecondIpo='';
				}else{
					this.tableSearch.isTouliStatusChiying=statusListval.includes('isTouliStatusChiying')?'1':'0';
					this.tableSearch.isTouliStatusFirstIpo=statusListval.includes('isTouliStatusFirstIpo')?'1':'0';
					this.tableSearch.isTouliStatusNormal=statusListval.includes('isTouliStatusNormal')?'1':'0';
					this.tableSearch.isTouliStatusSecondIpo=statusListval.includes('isTouliStatusSecondIpo')?'1':'0';
				}
			},
			deep:true
		}
	},
	methods: {
		// 切换主页面menuList背景颜色--选择标签
		// 全选按钮
		checkAll($event,type) {
			// return;
			$event.preventDefault();
			this.allChecked[type].checked = !this.allChecked[type].checked;
			for (p in this[type]) {
				this[type][p].checked = this.allChecked[type].checked;
			}
		},
		// 点击单个标签点击选中
		checkSingle: function ($event, index ,type) {
			$event.preventDefault();
			// this.bgIndex = index;   //背景索引
			this[type][index].checked = !this[type][index].checked;
			let checkAllFlag = true;
			for (p in this[type]) {
				if (p == 'checked') continue;
				if (!this[type][p].checked) {
					// 有一个没有选中，则全选也不选中
					checkAllFlag = false;
					break
				}
			}
			this.allChecked[type].checked = checkAllFlag;
		},
		// 主表格数据
		getTableData: function (currentIndex) {
			this.tableSearch.pageNo = currentIndex+1;
			this.tableSearch.pageSize = this.pageMaxNum;
			$(".cover").show();
			$.post({
				url: this.baseUrl+'/getTableData.ajax',
				data: this.tableSearch,
				success: function (result) {
					$(".cover").hide();
					if (result.error === 0) {
						this.currentIndex = currentIndex;
						this.totalPage = Math.ceil(result.data.total / this.tableSearch.pageSize);
						if (result.data.fundInfoUopVos&&result.data.fundInfoUopVos.length>0) {
							this.tableData = result.data.fundInfoUopVos;
						} else {
							this.tableData = []
							this.showText = '暂无数据';
						}
					} else {
						$(".cover").hide();
						this.tableData = [];
						this.showText = '暂无数据';
						this.currentIndex = 0;
						this.showDialog('', 'info', false, result.msg);
					}
				}.bind(this)
			});
		},
		// 获取渠道权限列表
		getBranchList: function () {
			$.post({
				url: this.baseUrl+'/getbranchList.ajax',
				success: function (result) {
					if (result.error === 0) {
						this.branchList = result.data;
					} 
				}.bind(this)
			});
		},
		// 获取风险等级列表
		getRiskLevelList: function () {
			$.post({
				url: this.baseUrl+'/getRiskLevel.ajax',
				success: function (result) {
					if (result.error === 0) {
						this.riskLevelList = result.data;
					} 
				}.bind(this)
			});
		},
		// 获取现金宝类型列表
		getxjbTypeList: function () {
			$.post({
				url: this.baseUrl+'/getxjbTp.ajax',
				success: function (result) {
					if (result.error === 0) {
						this.xjbTypeList = result.data;
					} 
				}.bind(this)
			});
		},
		// setProductData
		setProductData:function(item){
			if(item){
				this.productDataOperate = item
			}else{
				this.productDataOperate = this.initProductData
			}
		},
		// 产品相关信息的新增修改弹窗
		showAdd: function () {
			this.modifyStatus = 0; //弹出新增弹窗
			this.setProductData();
			this.showDialog('', 'add');
		},
		add:function(){
			if(this.productCheck()){
				var params = JSON.parse(JSON.stringify(this.productDataOperate));
				delete params.touliFundinfo.isNormal
				delete params.touliFundinfo.isFirstIpo
				params.fundinfoBase.fundId = params.fundId;
				params.touliFundinfo.fundId = params.fundId;
				console.log(params);
				$.post({
					url: this.baseUrl+'/productAddOrUpdate.ajax',
					data:params,
					success: function (result) {
						if (result.error === 0) {
							this.showDialog('add','info',false,result.msg)
							this.getTableData(0);
						}else{
							this.showDialog('add','info',true,result.msg)
						} 
					}.bind(this)
				});
			}
		},
		showUpdate:function(fundId){
			this.modifyStatus = 1; //弹出新增弹窗
			this.getSingleProductData(fundId);
			this.setProductData();
			this.showDialog('', 'add');
		},
		getSingleProductData:function(fundId){
			$.post({
				url: this.baseUrl+'/singleQueryProductInfo.ajax',
				data:{fundId},
				success: function (result) {
					if (result.error === 0) {
						console.log(result);
					}else{
						this.showDialog('add','info',true,result.msg)
					} 
				}.bind(this)
			});
		},
		modify:function(){

		},
		productCheck:function(){
			if(!this.productDataOperate.fundId){
				this.showDialog('add','info',true,'请填写产品代码')
				return false
			}
			if(!this.productDataOperate.fundinfoBase.fundChineseName){
				this.showDialog('add','info',true,'请填写产品名称')
				return false
			}
			if(!this.productDataOperate.fundinfoBase.fundName){
				this.showDialog('add','info',true,'请填写产品简称')
				return false
			}
			if(!this.productDataOperate.fundinfoBase.fundRiskLevel){
				this.showDialog('add','info',true,'请填写风险等级')
				return false
			}
			if(!this.productDataOperate.fundinfoBase.fundRiskLevel){
				this.showDialog('add','info',true,'请填写现金宝分类')
				return false
			}
			if(!this.productDataOperate.fundinfoBase.fundRiskLevel){
				this.showDialog('add','info',true,'请填写现金宝分类')
				return false
			}
			if(this.productDataOperate.touliFundinfo.touliFundtpList.length===0){
				this.showDialog('add','info',true,'请填写产品类型')
				return false
			}
			if(this.productDataOperate.touliFundinfo.isSecondIpo=='1'){
				if(!this.productDataOperate.touliFundinfo.secondStartDate||!this.productDataOperate.touliFundinfo.secondEndDate){
					this.showDialog('add','info',true,'请填写首发时间段')
					return false
				}
				if(new Date(this.productDataOperate.touliFundinfo.secondStartDate).getTime()>new Date(this.productDataOperate.touliFundinfo.secondEndDate).getTime()){
					this.showDialog('add','info',true,'起始时间不能大于终止时间')
					return false
				}
			}
			return true
		},
		// 物料相关的
		showMaterialInfo: function () {
			this.getMediaPkb(this.productDataOperate.fundId).then((result)=>{
				if(result){
					this.modifyStatus1 = '1'//修改
				}else{
					this.modifyStatus1 = '0' //新增
					this.materialInfoOperate.productId = this.productDataOperate.fundId;
				}
			},(error)=>{
				this.showNestDialog('add', 'materialInfoAdd' ,'info', true,error.errorMsg);
			})
			this.showDialog('add', 'materialInfoAdd', true);
		},
		// 物料的新增或修改
		addOrUpdate:function(){
			var params = JSON.parse(JSON.stringify(this.materialInfoOperate));
		 	delete params.modifyTime;
		 	delete params.modifyBy;
			//  更新人创建人在node中添加
			 console.log(params);
			var url = ''
			if(this.modifyStatus1==0){
				url+= this.baseUrl+'/mediaPkbAdd.ajax';
			}else{
				url+= this.baseUrl+'/mediaPkbUpdate.ajax';
			}
			$.post({
				url,
				data:params,
				success: function (result) {
					if (result.error === 0) {
						console.log(result);
						this.showNestDialog('add', 'materialInfoAdd' ,'info', false,'成功提交物料信息');
					}else{
						this.showDialog('add','info',true,result.msg)
					} 
				}.bind(this)
			});
		},
		// 获取物料信息
		getMediaPkb:function(productId){
			return new Promise((resolve,reject)=>{
				$.post({
					url: this.baseUrl+'/mediaPkbQuery.ajax',
					data:{productId},
					success: function (result) {
						if (result.error === 0) {
							resolve(result.data)
						}else{
							reject({errorMsg:result.msg})
						} 
					}.bind(this)
				});
			})
			
		},

		// 批量操作
		showBatchOperation: function () {
			this.showDialog('', 'batchOperation', false)
		},
		confirmBatchOperation: function () {

		},
		// 本地图片上传
		uploadImg(e) {
			//上传图片
			// this.option.img
			var file = e.target.files[0];
			this.fileName = file.name;
			this.shareCoverImage = ''; //这里是用作删除图片，每次点击先隐藏按钮
			console.log("fileName===", this.fileName);
			if (!/\.(gif|jpg|jpeg|png|bmp|GIF|JPG|PNG)$/.test(e.target.value)) {
				alert('图片类型必须是.gif,jpeg,jpg,png,bmp中的一种')
				return false
			}
			var reader = new FileReader()
			reader.onload = (e) => {
				let data
				if (typeof e.target.result === 'object') {
					// 把Array Buffer转化为blob 如果是base64不需要
					data = window.URL.createObjectURL(new Blob([e.target.result]))
				} else {
					data = e.target.result
				}
				this.option.img = data
				$('#uploads').attr('type', 'text'); //解决不能重复添加问题-先变成text
			}
			// 转化为base64
			// reader.readAsDataURL(file)
			// 转化为blob
			reader.readAsArrayBuffer(file)
		},
		uploadForServer() {
			// 输出裁剪过的blob
			var _this = this;
			this.$refs.cropper.getCropBlob(async (data) => {
				let [error, res] = await this.awaitWrap(compress(data, this.limitSize)); //获得压缩过的blob
				if (error) {
					console.log(error);
					return
				}
				console.log('res', res);
				var formdata = new FormData();

				let file = new File([res.compressFile], this.fileName);
				console.log(file);
				if (!file.name) {
					_this.showDialog('add', 'info', true, '请选择要上传的图片!');
					return false;
				}
				console.log(file.name);
				formdata.append('file', file);
				this.loadingShow=true;
				$.post({
					url: this.baseUrl+'/uploadImg.ajax',
					cache: false,
					data: formdata,
					processData: false,
					contentType: false,
					success: function (result) {
						if (result.error === 0) {
							this.loadingShow=false;
							$('#uploads').attr('type', 'file'); //解决不能重复添加问题-再变成File
							this.shareCoverImage = result.data.imageUrl;
							this.showDialog('materialInfoAdd','info',true, result.msg);
							$('#add').modal('hide')
						} else {
							this.showDialog('materialInfoAdd','info',true, result.msg);
							$('#add').modal('hide')
						}
					}.bind(this)
				});
			})
		},
		// 删除图片-这一步是删除已经上传了的图片
		delFile() {
			//删除图片按钮置空图片和预览
			this.option.img = '';
			this.shareCoverImage = '';
		},
		// 实时预览函数
		realTime(data) {
			this.previews = data
			// console.log(data)
		},
		jumpSubPage:function(item){
			if(item.touliFundtpList&&item.touliFundtpList.length>0){
				url='/contentMgmt/productData/productList.html?pageType=Material&fundId='+item.fundId+'&fundName='+item.fundName+'&fundType='+item.touliFundtpList.join(',');
			}else{
				url='/contentMgmt/productData/productList.html?pageType=Material&fundId='+item.fundId+'&fundName='+item.fundName+'&fundType='
			}
			console.log(url);
			window.location.href=url;
		},
		//主表格分页方法
		prev: function () {
			if (this.currentIndex <= 0) {
				return;
			}
			this.getTableData(this.currentIndex - 1);
		},
		next: function () {
			if (this.currentIndex >= this.totalPage - 1) {
				return;
			}
			this.getTableData(this.currentIndex + 1);
		},
		changeIndex: function (index) {
			this.getTableData(index - 1);
		},
		toFirst: function () {
			this.getTableData(0);
		},
		toLast: function () {
			this.getTableData(this.totalPage - 1);
		},
		showDialog: function (dia1, dia2, callback, msg) {
			if (msg) {
				this.diaMsg = msg;
			} else {
				msg = '输入条件错误';
			}
			if (!dia1) {
				$('#' + dia2).modal('show');
			} else if (!dia2) {
				$('#' + dia1).modal('hide');
			} else if (!callback) {
				$('#' + dia1).on("hidden.bs.modal", function () {
					$('#' + dia2).modal('show');
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
			} else {
				$('#' + dia1).on("hidden.bs.modal", function () {
					$('#' + dia2).on("hidden.bs.modal", function () {
						$('#' + dia1).modal("show");
						$('#' + dia2).off().on("hidden", "hidden.bs.modal");
					});
					$('#' + dia2).modal("show");
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
			}
		},
		showNestDialog: function (dia1, dia2, dia3, callback, msg) { //页面内嵌套了多个模态框
			if (msg) {
				this.diaMsg = msg;
			} else {
				msg = '输入条件错误';
			}
			if (!dia1) {
				$('#' + dia2).modal('show');
			} else if (!dia2) {
				$('#' + dia1).modal('hide');
			} else if (!callback) {
				$('#' + dia1).on("hidden.bs.modal", function () {
					$('#' + dia2).on("hidden.bs.modal", function () {
						$('#' + dia3).on("hidden.bs.modal", function () {
							$('#' + dia3).modal('hide');
							$('#' + dia3).off().on("hidden", "hidden.bs.modal");
						})
						$('#' + dia3).modal("show");
						$('#' + dia2).off().on("hidden", "hidden.bs.modal");
						$('#' + dia2).modal('hide');
					});
					$('#' + dia2).modal("show");
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
				// $('#' + dia1).on("hidden.bs.modal", function () {
				// 	$('#' + dia2).modal('show');
				// 	$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				// });
				// $('#' + dia1).modal('hide');
			} else {
				$('#' + dia1).on("hidden.bs.modal", function () {
					$('#' + dia2).on("hidden.bs.modal", function () {
						$('#' + dia3).modal("show");
						$('#' + dia2).modal("hide");
						$('#' + dia2).off().on("hidden", "hidden.bs.modal");
						$('#' + dia3).on("hidden.bs.modal", function () {
							$('#' + dia2).modal('show');
							$('#' + dia3).modal('hide');
							$('#' + dia3).off().on("hidden", "hidden.bs.modal");
						});
					});
					$('#' + dia2).modal("show");
					$('#' + dia1).off().on("hidden", "hidden.bs.modal");
				});
				$('#' + dia1).modal('hide');
			}
		},
		awaitWrap(promise) { // await 异常处理包装
			return promise.then(res => [null, res], error => [error, null]);
		},
		transformTime(createTime) {
			let date = new Date(Number(createTime));
			let year = date.getFullYear();
			let month = date.getMonth() + 1;
			let day = date.getDate();
			let h = date.getHours()
			let i = date.getMinutes()
			let s = date.getSeconds();
			month = month < 10 ? '0' + month : month;
			day = day < 10 ? '0' + day : day;
			if (h < 10) {
				h = '0' + h;
			}
			if (i < 10) {
				i = '0' + i;
			}
			if (s < 10) {
				s = '0' + s;
			}
			let dateT = year + '-' + month + '-' + day + " " + h + ':' + i + ':' + s
			return dateT
		}
	},
	components: {
		'date-picker': VueBootstrapDatetimePicker
	},
	filters:{
		fundtpTranfer:function(val){
			if(val){
				return val
			}else{
				return '-'
			}
		},
		countFilter:function(list,type){
			if(list.length>0){

			}else{
				return 0
			}
		}
	}
});