const request = require('../../../local_data/requestWrapper');
const fs = require('fs');
const path = require('path');
const formidable = require('formidable');
const apiUrlList = require('../apiConfig').recommendSystem.recommendSystemTemplateConfig.privilegeConfig;
module.exports = function (app) {
    //获取分页查询列表
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/queryInfo.ajax', (req, res, next) => {
        let params = req.body;
        params.pageNo = parseInt(params.pageNo);
        params.pageSize = parseInt(params.pageSize);
        let userId = req.session.loginInfo.userid;
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/queryInfo.ajax',
            req: req,
            url: apiUrlList.queryInfo,
            qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            if (body && body.returnCode == 0) {
                let data = body.body;
                data.userId = userId;
                data.pages = Math.ceil(data.total / params.pageSize); //最大页码
                data.pageNum = params.pageNo; //当前页
                if (data.rows && Array.isArray(data.rows) && data.rows.length > 0) {
                    data.rows.forEach((item) => {
                        item.check = false;
                    });
                }
                res.send({
                    error: 0,
                    msg: '查询成功',
                    data: data
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
        });
    });

    //删除
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/delete.ajax', (req, res, next) => {
        let params = req.body;
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/delete.ajax',
            req: req,
            operateType: 3, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.deleteInfo,
            qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            if (body && body.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '操作成功',
                    data: null
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
        });
    });
    //新增
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/add.ajax', (req, res, next) => {

        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/add.ajax',
            req: req,
            operateType: 1, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.add,
            body: req.body,
            timeout: 15000,
            json: true
        };
        request.post(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '添加成功'
                });
            } else if (result && result.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '添加失败'
                });
            }
        });
    });
    //修改
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/update.ajax', (req, res, next) => {

        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/update.ajax',
            req: req,
            operateType: 2, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.update,
            body: req.body,
            timeout: 15000,
            json: true
        };
        request.post(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '修改成功'
                });
            } else if (result && result.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '修改失败'
                });
            }
        });
    });
    //刷新缓存
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/fresh.ajax', (req, res, next) => {
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/fresh.ajax',
            req: req,
            operateType: 2, // operateType:操作类型 0:登录 1:新增 2:修改 3:删除 4:修改密码
            url: apiUrlList.fresh,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            if (body && body.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '操作成功',
                    data: null
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
        });
    });
    //Viewlist
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/viewList.ajax', (req, res, next) => {
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/viewList.ajax',
            req: req,
            url: apiUrlList.viewList,
            qs: req.body,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            if (body && body.returnCode == 0) {
                if (body.body && body.body.rows) {
                    body.body.rows.forEach(function (item) {
                        item.previewImgurl = global.envConfig.pagePreviewImgurl + item.previewImgurl;
                    })
                }
                let data = body.body;
                res.send({
                    error: 0,
                    msg: '查询成功',
                    data: data
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
        });
    });
    //渠道列表
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/channelMenu.ajax', (req, res, next) => {
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/channelMenu.ajax',
            req: req,
            url: apiUrlList.channelMenu,
            qs: req.body,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '操作失败'
                });
            }
            if (body && body.returnCode == 0) {
                let data = body.body;
                res.send({
                    error: 0,
                    msg: '查询成功',
                    data: data
                });
            } else if (body && body.returnCode != 9999) {
                res.send({
                    error: 1,
                    msg: body.returnMsg
                });
            } else {
                res.send({
                    error: 1,
                    msg: '查询失败'
                });
            }
        });
    });
    // 获取  新增特权数据
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/privilegeList.ajax', (req, res, next) => {
        // let params = req.body,
        let userName = req.session.loginInfo.username;
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/privilegeList.ajax',
            req: req,
            url: apiUrlList.privilegeList,
            // qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '数据获取失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result && result.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '调用成功',
                    data: result.body,
                    userName
                });
            } else if (result && result.returnCode == 9999) {
                res.send({
                    error: 1,
                    msg: '数据获取失败'
                });
            } else {
                res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            }
        });
    });

    // 获取  来源备注
    app.post('/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/sourceList.ajax', (req, res, next) => {
        // let params = req.body,
        let userName = req.session.loginInfo.username;
        let option = {
            pageUrl: '/recommendSystem/recommendSystemTemplateConfig/privilegeConfig/sourceList.ajax',
            req: req,
            url: apiUrlList.sourceList,
            // qs: params,
            timeout: 15000,
            json: true
        };
        request(option, (error, response, body) => {
            if (error) {
                return res.send({
                    error: 1,
                    msg: '数据获取失败'
                });
            }
            let result = typeof body === 'string' ? JSON.parse(body) : body;
            if (result && result.returnCode == 0) {
                res.send({
                    error: 0,
                    msg: '调用成功',
                    data: result.body,
                    userName
                });
            } else if (result && result.returnCode == 9999) {
                res.send({
                    error: 1,
                    msg: '数据获取失败'
                });
            } else {
                res.send({
                    error: 1,
                    msg: result.returnMsg
                });
            }
        });
    });
};